<?xml version="1.0" encoding="utf-8"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="Times Roman" font-size="12pt" text-align="justify">
   <fo:layout-master-set>
      <fo:page-sequence-master master-name="pages">
         <fo:repeatable-page-master-alternatives>
            <fo:conditional-page-master-reference odd-or-even="odd" master-name="right"/>
            <fo:conditional-page-master-reference odd-or-even="even" master-name="left"/>
         </fo:repeatable-page-master-alternatives>
      </fo:page-sequence-master>
      <fo:simple-page-master master-name="right" margin-top="75pt" margin-bottom="25pt" margin-left="100pt" margin-right="50pt">
         <fo:region-body margin-bottom="50pt"/>
         <fo:region-after extent="25pt"/>
      </fo:simple-page-master>
      <fo:simple-page-master master-name="left" margin-top="75pt" margin-bottom="25pt" margin-left="50pt" margin-right="100pt">
         <fo:region-body margin-bottom="50pt"/>
         <fo:region-after extent="25pt"/>
      </fo:simple-page-master>
   </fo:layout-master-set>
   <fo:page-sequence master-name="pages" id="c41b2">
      <fo:flow>
         <fo:block>
            <fo:block font-size="20pt" font-weight="bold" space-before.optimum="8em">JDE User's Guide</fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b1">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">1. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Introduction</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Welcome to the <fo:inline font-style="italic">JDE User's Guide</fo:inline>. This
      guide explains how to use the JDE to develop Java applications and
      applets. The guide assumes that you are familiar with Emacs and
      JavaSoft's Java development tools.</fo:block>
         <fo:block id="c41b2b1b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>About the JDE
            </fo:block>

<fo:block space-before.optimum="1em" space-before.minimum="0.8em" 
	  space-before.maximum="1.2em">
The Java Development Environment (JDE) is an Emacs Lisp
	package that interfaces Emacs to third-party Java application
	development tools, such as those provided by JavaSoft's Java
	Development Kit (JDK). The result is an integrated development
	environment (IDE) comparable in power to many commercial Java IDEs.
	Features include: 
</fo:block>

<fo:list-block id="c41b2b1b2b2" 
	       space-before.minimum="0.8em" 
	       space-before.optimum="1em" 
	       space-before.maximum="1.2em">
  <fo:list-item id="c41b2b1b2b2a" 
		space-before.minimum="0.8em" 
		space-before.optimum="1em" 
		space-before.maximum="1.2em">
     <fo:list-item-label>
          <fo:block>•</fo:block>
     </fo:list-item-label>
     <fo:list-item-body>
        <fo:block>
           source code editing with syntax highlighting and auto
	    indentation
        </fo:block>
     </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>automatic completion of class fields and methods    
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>compilation with automatic jump from error messages
	    to responsible line in the source code.</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    generates class and method skeletons automatically
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>run Java application in an interactive (comint)
	    Emacs buffer
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b5" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    integrated debugging with interactive debug command
	    buffer and automatic display of current source file/line
	    when stepping through code
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b6" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    browse JDK doc, using the browser of your choice
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b7" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    browse your source code, using the Emacs etags facility
	    or a tree-structured speedbar.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b8" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    supports latest version of JavaSoft's Java Development
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2b9" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    runs on any platform supported by Emacs and Sun's Java SDK (e.g.,
	    Win95/NT and Solaris)
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2c10" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    easily and infinitely customizable
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b2b2c11" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    works with FSF Emacs and XEmacs
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
            </fo:list-block>
         </fo:block>
         <fo:block id="c41b2b1b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>JDE Requirements
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE requires the following software: </fo:block>
            <fo:list-block id="c41b2b1b3b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item id="c41b2b1b3b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
                        <fo:simple-link external-destination="http://www.gnu.org/">FSF Emacs</fo:simple-link> [http://www.gnu.org/] or
	    <fo:simple-link external-destination="http://www.xemacs.org/">XEmacs</fo:simple-link> [http://www.xemacs.org/] on Unix
	    platforms; the 20.6.1 version of  
	    <fo:simple-link external-destination="http://www.cs.washington.edu/homes/voelker/ntemacs.html">NT/Emacs</fo:simple-link> [http://www.cs.washington.edu/homes/voelker/ntemacs.html] on
	    Windows platforms, for general source file editing and tool integration functions.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b3b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="http://www.javasoft.com/java2/">Java
	      Development Kit (JDK)</fo:simple-link> [http://www.javasoft.com/java2/] or compatible set of Java
	    development tools (compiler, virtual machine, debugger,
	    class libraries, etc.)
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b3b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    Web browser (e.g., Netscape or Internet Explorer) for
	    viewing documentation.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b3b2b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    latest versions of Eric Ludlam's speedbar, 
	    semantic bovinator, and
	    eieio packages available for download from
	    <fo:simple-link external-destination="http://www.ultranet.com/~zappo/semantic.shtml">Eric's home page</fo:simple-link> [http://www.ultranet.com/~zappo/semantic.shtml]
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b3b2b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    The elib package available from the 
	    <fo:simple-link external-destination="http://sunsite.auc.dk/jde/">JDE web site</fo:simple-link> [http://sunsite.auc.dk/jde/]
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b3b2b5" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="http://www.cygnus.com/misc/gnu-win32/">bash</fo:simple-link> [http://www.cygnus.com/misc/gnu-win32/]
	    or other Unix-style shell highly recommended for Windows95/NT
	    environments.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
            </fo:list-block>
         </fo:block>
         <fo:block id="c41b2b1b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>JDE Components
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	The JDE distribution includes the following files:
      </fo:block>
            <fo:list-block id="c41b2b1b4b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item id="c41b2b1b4b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block> 


	    
                        <fo:simple-link external-destination="../../../lisp/jde.el">
                           <fo:inline font-family="monospace">jde.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde.el]. 
	    Defines jde-mode, a major Emacs mode for developing Java code.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-run.el">
                           <fo:inline font-family="monospace">jde-run.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-run.el]. 
	    Runs Java applications and applets
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-db.el">
                           <fo:inline font-family="monospace">jde-db.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-db.el]. 
	    Interfaces Emacs to <fo:inline font-weight="bold">jdb</fo:inline>, the command-line debugger that
	    comes with the JDK.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-gen.el">
                           <fo:inline font-family="monospace">jde-gen.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-gen.el]. Contains code
	    generation templates.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:inline font-family="monospace">bsh.jar</fo:inline>. Compiled files for the <fo:simple-link external-destination="http://www.beanshell.org/">BeanShell</fo:simple-link> [http://www.beanshell.org/], a
	    Java source code interpreter developed by Pat Neimeyer.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b5" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/beanshell.el">
                           <fo:inline font-family="monospace">beanshell.el</fo:inline>
                        </fo:simple-link> [../../../lisp/beanshell.el]. Provides an
	    Emacs interface to the BeanShell interpreter.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b6" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-wiz.el">
                           <fo:inline font-family="monospace">jde-wiz.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-wiz.el]. Provides "wizards"
	    that generate skeleton implementations of interfaces and
	    skeleton overrides of methods declared by superclasses.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b7" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-complete.el">
                           <fo:inline font-family="monospace">jde-complete.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-complete.el]. Automatic field
	    and method completion package.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b8" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-parse.el">
                           <fo:inline font-family="monospace">jde-parse.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-parse.el]. 
	    Java parser package.</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2b9" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/java.bnf">
                           <fo:inline font-family="monospace">java.bnf</fo:inline>
                        </fo:simple-link> [../../../lisp/java.bnf]. 
	    Java grammar used to generate the JDE's lisp-based Java parser.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c10" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-bug.el">
                           <fo:inline font-family="monospace">jde-bug.el
	      </fo:inline>
                        </fo:simple-link> [../../../lisp/jde-bug.el]. 
	    JDEbug user interface package.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c11" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-dbs.el">
                           <fo:inline font-family="monospace">jde-dbs.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-dbs.el]. 
	    JDEbug low-level command interface package.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c12" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jde-dbo.el">
                           <fo:inline font-family="monospace">jde-dbo.el</fo:inline>
                        </fo:simple-link> [../../../lisp/jde-dbo.el]. 
	    JDEbug output processing functions.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c13" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    source code, jar files, and documentation for the 
	    <fo:simple-link external-destination="../../java/">Java components</fo:simple-link> [../../java/] of the JDE.</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c14" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
                        <fo:simple-link external-destination="../../../lisp/jtags">
                           <fo:inline font-family="monospace">jtags</fo:inline>
                        </fo:simple-link> [../../../lisp/jtags] is a bash shell script that
	    tags Java source hierarchies.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b1b4b2c15" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
	    
                        <fo:simple-link external-destination="../../../lisp/jtags.csh">
                           <fo:inline font-family="monospace">jtags.csh</fo:inline>
                        </fo:simple-link> [../../../lisp/jtags.csh] is a c shell script
	    that tags Java source heierarchies.
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
            </fo:list-block>
         </fo:block>
         <fo:block id="c41b2b1b5">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Latest Version
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See <fo:simple-link external-destination="http://sunsite.auc.dk/jde/rootpage.html#Downloading">
	  Downloading the JDE</fo:simple-link> [http://sunsite.auc.dk/jde/rootpage.html#Downloading] on the JDE website for instructions on
	downloading the most recent version of the JDE. 
      </fo:block>
         </fo:block>
         <fo:block id="c41b2b1b6">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Installing the JDE</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See the <fo:simple-link external-destination="http://sunsite.auc.dk/jde/install.html">
	JDE Installation Guide</fo:simple-link> [http://sunsite.auc.dk/jde/install.html] on the JDE website for information
      on installing the JDE on your system.</fo:block>
         </fo:block>
         <fo:block id="c41b2b1b7">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Contacting the Author</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Please send bug reports and enhancement suggestions to 
	<fo:simple-link external-destination="mailto:paulk@mathworks.com">Paul Kinnucan</fo:simple-link> [mailto:paulk@mathworks.com].
      </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b2">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">2. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Editing Java Source Files</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      To edit an existing Java source file, load it into an Emacs
      buffer by executing <fo:inline font-weight="bold">C-x C-f</fo:inline>. Loading a Java source file
      into a buffer causes the buffer to enter into <fo:inline font-family="monospace">jde-mode</fo:inline>,
      a variant of <fo:inline font-family="monospace">java-mode</fo:inline>, which is in turn a variant of
      the standard Emacs <fo:inline font-family="monospace">cc-mode</fo:inline> for editing source files
      written in C and related languages. <fo:inline font-family="monospace">jde-mode</fo:inline> offers all the
      specialized source file editing commands of <fo:inline font-family="monospace">cc-mode</fo:inline> plus
      functions for compiling, running, and debugging Java source files.
      You can invoke the commands by selecting them from the JDE
      menu that <fo:inline font-family="monospace">jde-mode</fo:inline> displays on the Emacs menu bar or by
      typing the commands in the Emacs minibuffer.
    </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      
            <fo:block color="red">&lt;screenshot&gt;<fo:block>
                  <fo:external-graphic src="file:images/jdemenu.gif" width="auto" height="auto"/>
               </fo:block>&lt;/screenshot&gt;</fo:block>
    
         </fo:block>
         <fo:block id="c41b2b2b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Documenting Code
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	The JDE provides complete support for generating HTML documentation for 
	Java classes from comments inserted into the source code for those classes.
      </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See also</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:simple-link external-destination="#DisplayingDoc">Displaying Java Documentation</fo:simple-link> [#DisplayingDoc]</fo:block>
            <fo:block id="c41b2b2b3b4">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Inserting Javadoc Comments</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  To insert a skeleton javadoc comment for a class or method,
	  position point in the first line of the method or class and
	  select JDE-&gt;Document from the
	  Emacs menubar  or type <fo:inline font-weight="bold">C-c C-v j</fo:inline>.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  To customize the javadoc skeletons, select JDE-&gt;Options-&gt;Project-&gt;Javadoc 
	  from the Emacs menubar.
	</fo:block>
               <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                  <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Thanks...</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    to <fo:simple-link external-destination="mailto:david@dponce.com">David Ponce</fo:simple-link> [mailto:david@dponce.com] for developing the JDE's javadoc 
	    comment generation facility.
	  </fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b2b3b5">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Generating the Documentation</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  To generate documentation for the current project, open any source
	  file in the project and select Make Doc from the
	  JDE menu or enter <fo:inline font-weight="bold">M-x jde-javadoc-make</fo:inline>.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  The <fo:inline font-weight="bold">jde-javadoc-make</fo:inline> command runs the JDK's javadoc program to 
	  generate the documentation. The <fo:inline font-weight="bold">javadoc</fo:inline> command

	  must be on your system's command path.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  The <fo:inline font-weight="bold">jde-javadoc-make</fo:inline> command uses
	  <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> 
	  as the <fo:block color="red">&lt;varname&gt;-classpath&lt;/varname&gt;</fo:block> and <fo:block color="red">&lt;varname&gt;jde-db-source-directories
	  &lt;/varname&gt;</fo:block>
	  as the <fo:block color="red">&lt;varname&gt;-sourcepath&lt;/varname&gt;</fo:block> option for generating the doc. You can specify all

	  other javadoc options via JDE customization variables. To specify the

	  options, select Project-&gt;Options-&gt;Javadoc from the JDE
	  menu. Use 
	  <fo:block color="red">&lt;varname&gt;jde-javadoc-gen-packages&lt;/varname&gt;</fo:block> to specify the packages, classes, or source

	  files for which you want to generate javadoc. If this variable is <fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block>,

	  the <fo:inline font-weight="bold">jde-javadoc-make</fo:inline> generates javadoc for the Java source file in the current

	  buffer.
	</fo:block>
               <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                  <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    Thanks to <fo:simple-link external-destination="mailto:sakliban@cs.wustl.edu">Sergey A Klibanov
	    </fo:simple-link> [mailto:sakliban@cs.wustl.edu] for developing the JDE's javadoc generation facility.
	  </fo:block>
               </fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2b2b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Code Completion
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	With the JDE, you can enter the first few letters of a Java
	keyword, field, or method name and then have the JDEenter the
	remaining characters. When completing methods, the JDE enters
	the method arguments as well. The following sections describes
	the completion options that the JDE offers.
      </fo:block>
            <fo:block id="c41b2b2b4b2">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Java Keyword Completion</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE defines a set of abbreviations for Java
	  keywords. When you type one of these abbreviations followed
	  by a space in a Java source buffer, the JDE optionally
	  expands the abbreviation into the keyword. For example, when
	  the abbreviation mode is enabled, you need only type
	  <fo:block color="red">&lt;varname&gt;fa&lt;/varname&gt;</fo:block> followed by a space to enter the Java
	  keyword <fo:block color="red">&lt;varname&gt;false&lt;/varname&gt;</fo:block>. To enable or disable
	  abbreviation mode, select JDE-&gt;Project-&gt;Options-&gt;General and toggle the boolean variable <fo:block color="red">&lt;varname&gt;jde-enable-abbrev-mode&lt;/varname&gt;</fo:block>. To change, remove, or add an abbreviation, edit the variable <fo:block color="red">&lt;varname&gt;jde-mode-abbreviations&lt;/varname&gt;</fo:block> in the project customization buffer.</fo:block>
               <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                  <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE's Java keyword expansion facility is based
	    on the Emacs <fo:block color="red">&lt;varname&gt;abbrev-mode&lt;/varname&gt;</fo:block> facility. For
	    more information, see the Emacs user manual.</fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b2b4b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Control Flow Completion</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE defines abbreviations for Java control flow
	  structures, such as if-then-else. When you enter the
	  abbreviation followed by a space, the JDE expands the
	  abbreviation into a corresponding control structure
	  template.</fo:block>
               <fo:block keep-together.within-column="always" id="c41b2b2b4b3b2">
                  <fo:block>Example 2.1. Expanding a Control Flow Abbreviation</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The if-then-else abbreviation</fo:block>
                  <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	    ife
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">expands to the control flow structure</fo:block>
                  <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	    if ( ) {    
	    } // end of if ()
	    else   
	    } // end of if ()else
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b3b3">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Control Flow Abbreviations</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE defines the following abbreviations for control structures.</fo:block>
                  <fo:table-and-caption id="c41b2b2b4b3b3b2" keep-together.within-column="always">
                     <fo:table-caption>
                        <fo:block font-weight="bold">Table 2.1. </fo:block>
                     </fo:table-caption>
                     <fo:table>
                        <fo:table-column column-number="1"/>
                        <fo:table-column column-number="2"/>
                        <fo:table-header>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>Statement</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Abbreviation</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                        </fo:table-header>
                        <fo:table-body>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;if-then&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;if&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;else&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;else&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;if-then-else&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;ife&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;while&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;while&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;for&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;for&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;for (int I=0;I&lt;UL;I++)&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;for&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;main method&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;main&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;switch&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;switch&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;case&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;case&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                        </fo:table-body>
                     </fo:table>
                  </fo:table-and-caption>
                  <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                     <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      You must enable the JDE's Java keyword abbreviation mode to use the control flow abbreviations. See <fo:simple-link external-destination="#JavaKeywordCompletion">Java Keyword Completion</fo:simple-link> [#JavaKeywordCompletion] for more information.
	    </fo:block>
                  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b3b4">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Left Brace Placement</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The JDE's Java control flow templates support two options for opening brace placement: placement on the first line of the template (Kerningham &amp; Ritchie Style, the default) and placement on a separate line. Type <fo:inline font-weight="bold">M-x customize-variable jde-gen-k&amp;r</fo:inline> to specify the style you prefer.
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b3b5">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Customizing the Control Flow Templates</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can customize the templates to suit any indentation style. To customize the templates, select 
	    Project-&gt;Options-&gt;Autocode
	    from the JDE menu.</fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b3b6">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Enabling Variable Content</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Some templates optionally prompt you for items to insert into the template. To enable 
	    prompting, set the variable <fo:block color="red">&lt;varname&gt;tempo-interactive&lt;/varname&gt;</fo:block> to a 
	    non-<fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block> value in your <fo:inline font-family="monospace">.emacs</fo:inline> file.</fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b3b7">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Disabling the Control Flow Abbreviations</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To disable the control flow abbreviations, set the variable <fo:block color="red">&lt;varname&gt;jde-gen-cflow-enable&lt;/varname&gt;</fo:block> off.</fo:block>
                  <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                     <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Thanks to...</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Thanks to Eric D. Friedman &gt;friedman@lmi.net&lt;
	      for contributing the control flow templates.</fo:block>
                  </fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b2b4b4">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Dynamic Keyword Completion</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Emacs provides dynamic completion commands attempt to find completions for the word at point in the current buffer or other buffers.
	</fo:block>
               <fo:block keep-together.within-column="always" id="c41b2b2b4b4b2">
                  <fo:block>Example 2.2. Using Dynamic Completion</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    Suppose that the current source buffer contains the class
	    names <fo:block color="red">&lt;varname&gt;Component&lt;/varname&gt;</fo:block> and
	    <fo:block color="red">&lt;varname&gt;Container&lt;/varname&gt;</fo:block>. Now suppose you enter
	    <fo:block color="red">&lt;varname&gt;Co&lt;/varname&gt;</fo:block> somewhere in the buffer and type
	    M-/.
	    
	    The text <fo:block color="red">&lt;varname&gt;Component&lt;/varname&gt;</fo:block> replaces
	    <fo:block color="red">&lt;varname&gt;Co&lt;/varname&gt;</fo:block> in the buffer. 
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Typing
	    M-/
	    again changes <fo:block color="red">&lt;varname&gt;Component&lt;/varname&gt;</fo:block> to
	    <fo:block color="red">&lt;varname&gt;Container&lt;/varname&gt;</fo:block>. In this way, you can cycle
	    through all the possible completions for
	    <fo:block color="red">&lt;varname&gt;Co&lt;/varname&gt;</fo:block> in the current buffer.
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b4b3">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Dynamic Completion Commands</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Emacs provides two dynamic completion commands.</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The <fo:inline font-weight="bold">dabbrev-expand</fo:inline> command is bound to
	    the key combination
	    M-/
	    by default. It searches the current buffer for completions
	    of the word at point and, if none are found, other buffers
	    of the same type. For example, if the current buffer is a
	    Java source buffer, it searches other Java source buffers
	    for completions if none are found in the active buffer.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The <fo:inline font-weight="bold">hippie-expand</fo:inline> command provides more
	    extensive search capabilities. See the docstrings for
	    these functions for more information.
	  </fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b2b4b5">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Field and Method Completion</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  The JDE provides two commands for completing a Java field or
	  method name at point in the current buffer.</fo:block>
               <fo:list-block id="c41b2b2b4b5b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item id="c41b2b2b4b5b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item-label>
                        <fo:block>•</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block>
                           <fo:inline font-weight="bold">jde-complete-at-point</fo:inline>
	      (C-c-C-v-.)
	    </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item id="c41b2b2b4b5b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item-label>
                        <fo:block>•</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block>
                           <fo:inline font-weight="bold">jde-complete-at-point-menu</fo:inline> 
	      (C-c-C-v-C-.)
	    </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
               <fo:block id="c41b2b2b4b5b3">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">jde-complete-at-point</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    This command is bound to
	    C-c-C-v-.. 
	    It finds all the fields
	    and methods that complete the name at point. It then inserts the first potential
	    completion in the buffer at point. Repeatedly 
	    typing C-c-C-v-. causes 
	    the JDE to cycle through the other potential completions. If the completion is 
	    a method name, the command completes the method name and displays the method signature
	    in the minibuffer.
	  </fo:block>
                  <fo:block keep-together.within-column="always" id="c41b2b2b4b5b3b2">
                     <fo:block>Example 2.3. Completing a String Method Name</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      Typing C-c-C-v-.
	    </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      String s;
	      s.get
	      ^
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      completes the method name at point as follows</fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      String s;
	      s.getClass(
              ^
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">and displays</fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      java.lang.Class getClass()
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">in the minibuffer. Repeatedly typing 
	      C-c-C-v-. 
	      cycles through all the other get methods for the Java  <fo:block color="red">&lt;varname&gt;String&lt;/varname&gt;</fo:block> class.</fo:block>
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This command works for all of the following cases.</fo:block>
                  <fo:list-block id="c41b2b2b4b5b3b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b4b5b3b4a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>objects referenced by variables declared in the current buffer</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b4b5b3b4b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>static fields and methods</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b4b5b3b4b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		fields and methods of objects defined by the current class and its parent
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		Names of fields and methods of the current class must start with <fo:block color="red">&lt;varname&gt;this&lt;/varname&gt;</fo:block> or 
		<fo:block color="red">&lt;varname&gt;.&lt;/varname&gt;</fo:block> (period). Names of fields and methods declared by
		the parent of the current class must start with <fo:block color="red">&lt;varname&gt;super&lt;/varname&gt;</fo:block>.
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For example, this command completes</fo:block>
                           <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
		.
		^
		this.
		^
		super.
		^
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b4b5b3b4b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		objects referenced by the fields of objects referenced by variables declared in the
		current class or its parent or by static fields
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For example, this command completes</fo:block>
                           <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
		System.out.prin
		^
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b4b5b3b4b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		objects returned by methods of objects referenced by variables defined in the current 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		For example, this command completes
	      </fo:block>
                           <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
		Toolkit.getDefaultToolkit().get
		^
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b4b5b3b4b5" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		objects referenced by method parameters</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		For example, this command completes
	      </fo:block>
                           <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
		void setColor(String color) {
		color.get
		^
		}
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The <fo:inline font-weight="bold">jde-complete-at-point</fo:inline> command uses
	    the Beanshell to run Java code that in turn uses Java's
	    reflection (class introspection) capability to determine
	    the fields and methods defined for the class of object at
	    point. The command starts the Beanshell if it is not
	    running. This can cause a noticeable delay in the
	    execution of the command the first time it is used in a
	    session. The response can also be slow for classes
	    containing many methods and fields.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The completion command works only for compiled classes
	    that reside in the classpath defined by
	    <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> when the Beanshell
	    starts. Thus, if the command is unable to complete a
	    method or field, make sure that the class that defines the
	    field or method is compiled and exists on
	    <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>.
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b4b5b4">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">jde-complete-at-point-menu</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This command works exactly like
	    <fo:inline font-weight="bold">jde-complete-at-point</fo:inline> except that it
	    displays the potential completions for a field or method
	    in a popup menu. Selecting a completion from the menu
	    causes the command to use it to complete the method or
	    field at point.
	  </fo:block>
               </fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2b2b5">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Generating Code
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE provides the following code generation capabilities.</fo:block>
            <fo:list-block id="c41b2b2b5b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item id="c41b2b2b5b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>Code wizards</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b2b5b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>Code templates</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
            </fo:list-block>
            <fo:block id="c41b2b2b5b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Code Wizards
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  The JDE provides code generation wizards that generate
	  class-dependent code without requiring you to supply any
	  other information than the unqualified name of the class.
	   </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  The wizards use the BeanShell to run a Java utility that
	  searches the classpath specified by
	  <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> for classes that
	  match the unqualified name. If a wizard finds more than one
	  class of the same unqualified name on the classpath, i.e., a
	  class that exists in more than one package, it prompts you
	  to select one of the classes.
	</fo:block>
               <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                  <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    A wizard starts the Beanshell interpreter if it is not
	    already running. Thus, you may experience a slight delay
	    when invoking a wizard for the first time in a session.
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b5b3b4">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Import Wizard
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The import wizard generates an import statement for the
	    class name at point if an import statement does not
	    already exist for that class. The wizard generates the
	    import statement at the head of the source buffer.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    To import the class at point, select JDE-&gt;Wizards-&gt;Import
		Class from the Emacs
	    menubar or type
	    C-c-C-v-C-z.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The import wizard searches the current classpath for classes that match the class name at point, which may be unqualified. If the import wizard finds more than one class of the same unqualified name on the current classpath, it prompts you to select one of the classes to import.
	  </fo:block>
                  <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                     <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      The classpath that the import wizard searches for import candidates is the classpath specified by <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> when the BeanShell was last started.
	    </fo:block>
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The customization variable <fo:block color="red">&lt;varname&gt;jde-wiz-import-excluded-packages&lt;/varname&gt;</fo:block> allows you to specify a list of packages to exclude from consideration for import into the current source file. If the import wizard finds any classes on the classpath that belong to the list of prohibited packages, it removes them from the list of classes considered for import.
	  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b5b3b5">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Method Override Wizard</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    The method override wizard generates a skeleton method that
	    overrides a similarly named method defined by a superclass.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To override a method of a superclass: </fo:block>
                  <fo:list-block id="c41b2b2b5b3b5b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b3b5b3a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>1.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Position the Emacs point at the location in the buffer
		where you want the generated method to appear.
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The point must be within the class that is overriding the   method. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		
                              <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                    <fo:external-graphic src="file:images/OverrideMeth1.gif" width="auto" height="auto"/>
                                 </fo:block>&lt;/screenshot&gt;</fo:block>
	      
                           </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b5b3b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>2.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Select Wizards-&gt;Override Method from the JDE menu or enter M-x  <fo:block color="red">&lt;varname&gt;jde-wiz-overrided-method&lt;/varname&gt;</fo:block>. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		
                              <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                    <fo:external-graphic src="file:images/OverrideMeth2.gif" width="auto" height="auto"/>
                                 </fo:block>&lt;/screenshot&gt;</fo:block>
	      
                           </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The JDE prompts you to enter the name of the method to  be overridden in the minibuffer. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		
                              <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                    <fo:external-graphic src="file:images/OverrideMeth3.gif" width="auto" height="auto"/>
                                 </fo:block>&lt;/screenshot&gt;</fo:block>
	      
                           </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The name must be the name of a method defined by an
		ancestor of the class in which the Emacs point is located.
		The compiled class of the ancestor must be on the
		classpath specified by <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>. 
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b5b3b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>3.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Enter the name of the method to be overridden. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		If the  ancestors of the class in which you are overriding the
		method define more than one method of the same name, the
		wizard displays a dialog buffer that lists the methods.
		For example, Java's awt class hierarchy defines several
		variants of the method <fo:block color="red">&lt;varname&gt;repaint&lt;/varname&gt;</fo:block>. If you specify <fo:block color="red">&lt;varname&gt;repaint&lt;/varname&gt;</fo:block>
		as the method to override, the JDE displays the following
		dialog buffer: 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		
                              <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                    <fo:external-graphic src="file:images/OverrideMeth4.gif" width="auto" height="auto"/>
                                 </fo:block>&lt;/screenshot&gt;</fo:block>
	      
                           </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The dialog buffer lists the signature of each variant
		of the method you specified. Next to each signature is a
		radio button. The radio button of the currently selected
		signature contains an asterisk. To select another
		signature, right-click the radio button next to the
		variant. To confirm your selection and dismiss the dialog,
		right-click the [Ok] button. 
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b5b3b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>4.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Select the method variant you want to override and
		click the [Ok] button. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The   wizard inserts a skeleton implementation of the selected
		method at the current point in the Java source buffer.</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		
                              <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                    <fo:external-graphic src="file:images/OverrideMeth5.gif" width="auto" height="auto"/>
                                 </fo:block>&lt;/screenshot&gt;</fo:block>
	      
                           </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The wizard also inserts import statements for any
		classes referenced by the method that are not already
		imported by the containing class either explicitly or
		implicitly. The wizard inserts the import statements at
		the head of the source buffer after any existing import
		statements, or any package statement, or the first blank
		line in the buffer. 
	      </fo:block>
                           <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                              <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                              <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		  The method override wizard uses the BeanShell to create the interface 
		  implementation. If the   BeanShell is not currently running, the wizard 
		  starts the   BeanShell. Thus, if the BeanShell is not already running,
		  you may experience a short pause the first time you   override a method.
		</fo:block>
                           </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
               </fo:block>
               <fo:block id="c41b2b2b5b3b6">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Interface Wizard
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    This wizard creates a skeleton implementation of any interface
	    defined on the classpath specified by <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>.
	  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To create an implementation of an interface: </fo:block>
                  <fo:list-block id="c41b2b2b5b3b6b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b3b6b3a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>1.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		If the interface is to be implemented by a new class,
		create the class in a buffer.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b6b3b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>2.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Position the Emacs point at the point in the class where
		you want the implementation of the interface's methods to
		appear.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b6b3b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>3.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Select JDE-&gt;Wizards-&gt;Implement Interface or enter 
		M-x   <fo:block color="red">&lt;varname&gt;jde-wiz-implement-interface&lt;/varname&gt;</fo:block>. 
	      </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The JDE prompts you   to enter the name of the interface to be implemented. 
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b3b6b3b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>4.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>Enter the fully qualified name of the interface,
		for   example, <fo:inline font-family="monospace">java.awt.Event.MouseListener</fo:inline>.</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		The wizard inserts skeleton implementations of the methods
		declared by the interface at the current point in the
		current buffer. It inserts import statements for any
		classes required by the interface at the head of the
		current buffer (only if import statements do not already
		exist for the required classes). It also updates or
		creates an implements clause for the class.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
                  <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                     <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      The interface wizard uses the BeanShell to create
	      the interface implementation. If the BeanShell is not currently
	      running, it starts the BeanShell. Thus, if the BeanShell is not
	      already running, you may experience a short pause the first time
	      you use the wizard. </fo:block>
                  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b5b3b7">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Delegate Wizard
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    This wizard generates methods that delegate calls to a
	    class in the current buffer to an attribute of the class,
	    i.e., to an object that is a field of the current class.
	    For example, if the current buffer contains class
	    <fo:inline font-family="monospace">A</fo:inline> and  <fo:inline font-family="monospace">A</fo:inline> has
	    an   attribute, <fo:block color="red">&lt;varname&gt;A.b&lt;/varname&gt;</fo:block>, that is an instance
	    of class <fo:inline font-family="monospace">B</fo:inline>,  this wizard generates
	    all the public methods of class <fo:inline font-family="monospace">B</fo:inline>
	    in <fo:inline font-family="monospace">A</fo:inline> and delegates   handling of
	    those methods to <fo:block color="red">&lt;varname&gt;b&lt;/varname&gt;</fo:block>.
	  </fo:block>
                  <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                     <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Thanks to...</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      
                        <fo:simple-link external-destination="mailto:cfhart@Z-TEL.com">Charles Hart</fo:simple-link> [mailto:cfhart@Z-TEL.com] for
	      contributing this wizard.
	    </fo:block>
                  </fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b2b5b4">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Code Templates
               </fo:block>
               <fo:block id="c41b2b2b5b4b1">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Buffer Templates
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">These commands create buffers containing a skeleton Java class.
	    Each command prompts you to enter the path to a new Java source
	    file. They then create a buffer for the new file and insert a
	    template for a class of the same name as the newly created file.
	    In particular, the command </fo:block>
                  <fo:list-block id="c41b2b2b5b4b1b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b4b1b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Files-&gt;JDE New-&gt;Class creates a buffer containing a generic Java public class.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b1b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Files-&gt;JDE New-&gt;Console creates a buffer containing the main class of a
		Java console application.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b1b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		Files-&gt;JDE New-&gt;Other prompts you to create any of the above buffers or a
		custom (user-defined) buffer.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    You can create an empty Java class buffer by selecting 
	    Files-&gt;Open 
	    (C-x f) and
	    entering the path for a new file whose root name is the same as
	    the class you want to create and whose extension is <fo:inline font-family="monospace">.java.</fo:inline>
	  
                  </fo:block>
                  <fo:block id="c41b2b2b5b4b1b4">
                     <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Specifying Boilerplate Text</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      You can specify boilerplate text (for example, a copyright
	      notice) to be inserted at the head of class source files created
	      by the JDE. The JDE provides two ways to specify the boilerplate
	      text. The simplest way is to enter the lines of boilerplate text
	      as the value of the customization variable <fo:block color="red">&lt;varname&gt;jde-gen-buffer-boilerplate&lt;/varname&gt;</fo:block>.
	      Another way to specify the text is to set the value of the
	      customization variable <fo:block color="red">&lt;varname&gt;jde-gen-boilerplate-function&lt;/varname&gt;</fo:block>to a
	      function that generates the boilerplate text. (The default value
	      of this variable is <fo:block color="red">&lt;varname&gt;jde-gen-create-buffer-boilerplate&lt;/varname&gt;</fo:block>,
	      which returns the value of the boilerplate variable, 
	      <fo:block color="red">&lt;varname&gt;jde-gen-buffer-boilerplate&lt;/varname&gt;</fo:block>).
	      The functional approach allows you to generate boilerplate text
	      dynamically by evaluating the appropriate Lisp code. By saving
	      the values of boilerplate variables in project files, you can
	      specify different boilerplate text  for each project. 
	    </fo:block>
                  </fo:block>
                  <fo:block id="c41b2b2b5b4b1b5">
                     <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">Customization Variables</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following JDE customization variables control creation of
	      autocoded Java source buffers: 
	    </fo:block>
                     <fo:table-and-caption id="c41b2b2b5b4b1b5b2" keep-together.within-column="always">
                        <fo:table-caption>
                           <fo:block font-weight="bold">Table 2.2. </fo:block>
                        </fo:table-caption>
                        <fo:table>
                           <fo:table-column column-number="1"/>
                           <fo:table-column column-number="2"/>
                           <fo:table-column column-number="3"/>
                           <fo:table-header>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>Variable</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Group</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Usage</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                           </fo:table-header>
                           <fo:table-body>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-class-buffer-template&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Template for a generic public class buffer.</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-console-buffer-template&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Template for a console application buffer.</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-jfc-app-buffer-template&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Template for a JFC (Swing) application.</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-buffer-templates&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Specifies templates available to create
		      Java buffers.</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-buffer-boilerplate&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Specifies lines of text to be inserted
		      at the head of class files.</fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                              <fo:table-row>
                                 <fo:table-cell>
                                    <fo:block>
                                       <fo:block color="red">&lt;varname&gt;jde-gen-boilerplate-function&lt;/varname&gt;</fo:block>
                                    </fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Autocode</fo:block>
                                 </fo:table-cell>
                                 <fo:table-cell>
                                    <fo:block>Specifies a function that returns a string of
		      boilerplate text. The default value is <fo:block color="red">&lt;varname&gt;jde-gen-create-buffer-boilerplate&lt;/varname&gt;</fo:block>,
		      which returns the value of 
                                       <fo:block color="red">&lt;varname&gt;jde-gen-buffer-boilerplate&lt;/varname&gt;</fo:block>.
                                    </fo:block>
                                 </fo:table-cell>
                              </fo:table-row>
                           </fo:table-body>
                        </fo:table>
                     </fo:table-and-caption>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      See <fo:simple-link external-destination="#CustomizingAutocode">Customizing Autocode
		Templates</fo:simple-link> [#CustomizingAutocode] for information on how to customize the class
	      autocode templates. </fo:block>
                  </fo:block>
               </fo:block>
               <fo:block id="c41b2b2b5b4b2">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Point Templates
                  </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following commands insert templates at the current point
	    in the buffer: </fo:block>
                  <fo:list-block id="c41b2b2b5b4b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b4b2b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Get/Set Pair 
		generates an instance variable and a get and set method  .
		for that variable
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Println 
		generates a <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">System.out.println(...);</fo:block> statement.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Action 
		generates and registers an action listener for a
		specified component.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b2b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Listener-&gt;Window  
		generates and registers a window listener for a specified
		window.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b2b4" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Listener-&gt;Mouse 
		generates and registers a mouse listener for a specified
		component.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b2b5" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		JDE-&gt;Generate-&gt;Other 
		allows you to select any of the above templates or a
		custom (user-defined) template.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following variables control generation of code at  point: 
	  </fo:block>
                  <fo:table-and-caption id="c41b2b2b5b4b2b4" keep-together.within-column="always">
                     <fo:table-caption>
                        <fo:block font-weight="bold">Table 2.3. </fo:block>
                     </fo:table-caption>
                     <fo:table>
                        <fo:table-column column-number="1"/>
                        <fo:table-column column-number="2"/>
                        <fo:table-column column-number="3"/>
                        <fo:table-header>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>Variable</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Group</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Usage</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                        </fo:table-header>
                        <fo:table-body>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-get-set-var-template&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Defines a get/set method pair template.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-listener-action-template&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Defines an action listener template.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-listener-window-template&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Defines a window listener template.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-listener-mouse-template&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Defines a mouse listener template.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-inner-class-template&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Defines a template for creating a class inside
		    another class or inside an existing source buffer.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                           <fo:table-row>
                              <fo:table-cell>
                                 <fo:block>
                                    <fo:block color="red">&lt;varname&gt;jde-gen-code-templates&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Autocode</fo:block>
                              </fo:table-cell>
                              <fo:table-cell>
                                 <fo:block>Specifies available code templates.</fo:block>
                              </fo:table-cell>
                           </fo:table-row>
                        </fo:table-body>
                     </fo:table>
                  </fo:table-and-caption>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See</fo:block>
                  <fo:list-block id="c41b2b2b5b4b2b6" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b4b2b6a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		
                              <fo:simple-link external-destination="#CustomizingStandardTemplates">Customizing
		  Standard Templates</fo:simple-link> [#CustomizingStandardTemplates] for information on how to customize 
		templates provided by the JDE.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b2b6b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
		
                              <fo:simple-link external-destination="#CreatingCustomTemplates">Creating Custom
		  Templates</fo:simple-link> [#CreatingCustomTemplates] for information on how to create templates
		from scratch.
	      </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
               </fo:block>
               <fo:block id="c41b2b2b5b4b3">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Customizing Templates</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can customize the JDE's standard code templates, using the Emacs
	    customization feature. </fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To customize an autocode template: </fo:block>
                  <fo:list-block id="c41b2b2b5b4b3b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b4b3b3a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>1.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>Select JDE-&gt;Options-&gt;Autocode</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE displays a customization buffer containing the
		autocode templates. </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b3b3b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>2.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>Edit the template to suit your needs.</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE uses the
		template format defined by <fo:inline font-family="monospace">tempo.el</fo:inline> to represent
		class templates. Each template consists of a list of
		strings, symbols, and functions, each of which represents
		content to be inserted successively into the buffer at
		the current point. The strings represent fixed content.
		The symbols and functions represent variable content. See
		the docstring for the function <fo:block color="red">&lt;varname&gt;tempo-define-template&lt;/varname&gt;</fo:block>
		for more information, including the meaning of special
		symbols such as <fo:block color="red">&lt;varname&gt;'n&lt;/varname&gt;</fo:block>. </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b3b3b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>3.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>Select the state button associated with the template.</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A menu pops up with a list of options for saving your
		changes. </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b3b3b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>4.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>Save your changes.</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Select 
		Save for Future Sessions if you want 
		your changes to apply to all projects. If you want your changes to apply
		only to the current projects, select Set for Current Session. Then select 
		JDE-&gt;Options-&gt;Save Project
		to save your changes in the current project's project file.</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
               </fo:block>
               <fo:block id="c41b2b2b5b4b4">
                  <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                     <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Creating Templates</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE considers any command (interactive function) that
	    inserts code into a buffer at point to be a template. The JDE
	    uses the Emacs tempo library to create built-in templates.
	    You can use tempo to create your own, add-on templates (see below
	    and the doc for the <fo:block color="red">&lt;varname&gt;tempo-define-template &lt;/varname&gt;</fo:block>for
	    more information) or create templates from scratch.
	    In either case, once you have created a template, you can add it
	    to the JDE's lists of available code and/or buffer templates, 
	    using the JDE's <fo:block color="red">&lt;varname&gt;jde-gen-code-templates&lt;/varname&gt;</fo:block> and/or 
	    <fo:block color="red">&lt;varname&gt;jde-gen-buffer-templates&lt;/varname&gt;</fo:block>
	    variables, respectively. Adding a template to these lists enables
	    you to invoke the templates from the JDE menus. When adding a
	    template, you need to specify a unique title for the template.
	    These titles enable you to specify the templates when invoking
	    them, using the JDE's custom code template commands  
	    (Files-&gt;JDE New-&gt;Custom  and  
	    JDE-&gt;Generate-&gt;Custom). You can use
	    auto completion to enter a template title when invoking a custom
	    code generation command. Note that you can specify different sets
	    of templates for different projects, by setting and saving the
	    template list variables in project files. See the following
	    sections for more information: </fo:block>
                  <fo:list-block id="c41b2b2b5b4b4b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item id="c41b2b2b5b4b4b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
                              <fo:simple-link external-destination="#DefiningTemplate">Defining a Template and
		  Template Insertion Function</fo:simple-link> [#DefiningTemplate]</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b4b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
                              <fo:simple-link external-destination="#RegisterTemplate">Registering Custom
		  Templates</fo:simple-link> [#RegisterTemplate]</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item id="c41b2b2b5b4b4b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                        <fo:list-item-label>
                           <fo:block>•</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block>
                              <fo:simple-link external-destination="#AssignKeyToTemplate">Assigning Keys To
		  emplates</fo:simple-link> [#AssignKeyToTemplate]</fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
                  <fo:block id="c41b2b2b5b4b4b3">
                     <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                        <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Defining a Template and Template Insertion Function</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:block color="red">&lt;varname&gt;tempo-define-template&lt;/varname&gt;</fo:block> macro enables you
	      to define a template and a function that inserts that template at the
	      current point in the current buffer. You specify the template as a
	      list oftemplate elements where each element is text, a special symbol,
	      or a Lisp expression. The function inserts each text element exactly
	      as specified in the buffer; it replaces special symbols with some text
	      (e.g., user input), and it replaces Lisp expressions with the text
	      that results from evaluating them. </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For example, the following Lisp code </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      (tempo-define-template
	      "foo"                              ;; template name
	      '("System.out.println(\"foo\");") ;;template definition
	      "f"                               ;; abbreviation
	      "Inserts a print foo message")       ;; template documentation
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">defines a template for Java code that always prints
	      "foo" to standard out: </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      System.out.println("foo");
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Notice that the template definition uses the Lisp string escape
	      character to specify the string "foo".  This is necessary
	      when you want to include quoted strings in a template definition.)
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The sample Lisp form also defines an interactive template
	      function <fo:block color="red">&lt;varname&gt;tempo-template-foo&lt;/varname&gt;</fo:block>. Now suppose you insert
	      the sample code in your <fo:inline font-family="monospace">.emacs</fo:inline> file. After Emacs
	      starts up, whenever you enter the command M-x
	      <fo:block color="red">&lt;varname&gt;tempo-template-foo,&lt;/varname&gt;</fo:block> Emacs inserts </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      System.out.println("foo");
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">at the current point in your Java source buffer (or any buffer,
	      tempo doesn't care). </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The preceding example is admittedly not vary useful because it
	      always prints the same text. You can create more useful templates,
	      using special tempo template symbols and lisp forms. This
	      approach, for example, allows you to create a template that can
	      print any user-defined text to standard out: </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      (tempo-define-template
	      "debug"                          ;; template name
	      '("if (debug)" n&gt;                ;; insert new line plus indent
	      "System.out.println("
	      (p "Enter debug message:")       ;; Prompts for debug message
	      ");")
	      "d"                              ;; abbreviation 

	      "Inserts a print debug message") ;; template documentation 
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The template function produced by this example prompts you to
	      enter the text to be printed when inserting the function into a
	      buffer. In particular, it inserts </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      if (debug)
	      System.out.println(DEBUG-MESSAGE);
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">where <fo:block color="red">&lt;varname&gt;DEBUG-MESSAGE&lt;/varname&gt;</fo:block> is any text that you enter. For
	      example, suppose you enter </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      "Selected color = " + color
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">at the prompt. The template function inserts </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      if (debug)
	      System.out.println("Selected color = " + color);
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">at the current point in the buffer. </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See the documentation for <fo:block color="red">&lt;varname&gt;tempo-define-template&lt;/varname&gt;</fo:block> (type
	      c-h f 
	      <fo:block color="red">&lt;varname&gt;tempo-define-template&lt;/varname&gt;</fo:block>) for more
	      information on creating templates. </fo:block>
                  </fo:block>
                  <fo:block id="c41b2b2b5b4b4b4">
                     <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                        <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Registering Custom Templates</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can register templates that you create with the JDE. When
	      you register a template with the JDE, it appears among the list of
	      templates that you can select when you select JDE-&gt;Generate-&gt;Other..... You register a
	      template by customizing the JDE variable
	      <fo:block color="red">&lt;varname&gt;jde-gen-code-templates&lt;/varname&gt;</fo:block>. The value of this variable is a list
	      of the template functions that the JDE command  JDE-&gt;Generate-&gt;Other.... can invoke. To
	      register a custom template, add its name to the list. For example, the
	      following screen shows the customization buffer for
	      <fo:block color="red">&lt;varname&gt;jde-gen-code-templates&lt;/varname&gt;</fo:block> after it has been customized to
	      include the template defined in the previous example. </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      
                        <fo:block color="red">&lt;screenshot&gt;<fo:block>
                              <fo:external-graphic src="file:images/RegisterTemplate.gif" width="auto" height="auto"/>
                           </fo:block>&lt;/screenshot&gt;</fo:block>
	    
                     </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To insert a template that you have registered </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                           <fo:list-item>
                              <fo:list-item-label>
                                 <fo:block>1.</fo:block>
                              </fo:list-item-label>
                              <fo:list-item-body>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Select JDE-&gt;Generate-&gt;Other....</fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE displays the prompt</fo:block>
                                 <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
		  Enter template:
		</fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">in the minibuffer. </fo:block>
                              </fo:list-item-body>
                           </fo:list-item>
                           <fo:list-item>
                              <fo:list-item-label>
                                 <fo:block>2.</fo:block>
                              </fo:list-item-label>
                              <fo:list-item-body>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Enter the template's name and press <fo:inline font-weight="bold">Enter</fo:inline>
                                 </fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">or,</fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">press the <fo:inline font-weight="bold">Tab</fo:inline> key to
		  display a list of templates in a completion buffer: </fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
		  
                                    <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                          <fo:external-graphic src="file:images/TemplateList.gif" width="auto" height="auto"/>
                                       </fo:block>&lt;/screenshot&gt;</fo:block>
		
                                 </fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Select the template you want by double-clicking its
		  name.</fo:block>
                              </fo:list-item-body>
                           </fo:list-item>
                        </fo:list-block>
                     </fo:block>
                  </fo:block>
                  <fo:block id="c41b2b2b5b4b4b5">
                     <fo:block font-size="12pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                        <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Assigning Keys to Templates</fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can assign templates to keyboard keys to speed use of
	      frequently used templates. For example, insert this form </fo:block>
                     <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	      (global-set-key [f9] 'jde-gen-to-string-method)
	    </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">in your <fo:inline font-family="monospace">.emacs</fo:inline> file to assign
	      the <fo:inline font-weight="bold">F9</fo:inline> function key to the JDE template
	      that generates a skeleton <fo:block color="red">&lt;varname&gt;toString&lt;/varname&gt;</fo:block>
	      method. </fo:block>
                  </fo:block>
               </fo:block>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b3">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">3. <fo:block color="red">&lt;anchor&gt; Compiling Java Programs&lt;/anchor&gt;</fo:block>
         </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:block color="red">&lt;varname&gt;jde-compile&lt;/varname&gt;</fo:block> command (JDE-&gt;Compile,
      <fo:inline font-weight="bold">C</fo:inline>
            <fo:inline font-weight="bold">c</fo:inline>-<fo:inline font-weight="bold">C</fo:inline>
            <fo:inline font-weight="bold">v</fo:inline>-<fo:inline font-weight="bold">C</fo:inline>
            <fo:inline font-weight="bold">c</fo:inline>) compiles the Java source file in the
      current buffer, using <fo:block color="red">&lt;varname&gt;javac&lt;/varname&gt;</fo:block>, the Java compiler provided
      by the JDK, or another compiler that you specify (see <fo:simple-link external-destination="#SpecifyingCompiler">Specifying a Compiler</fo:simple-link> [#SpecifyingCompiler]). The
      compile command displays the output of the compiler in a separate
      compilation buffer. If a compilation buffer does not exist, the
      compile command creates the buffer; otherwise, it reuses the
      existing compile output buffer. The compilation buffer operates
      in <fo:block color="red">&lt;varname&gt;compilation-mode&lt;/varname&gt;</fo:block>, a standard Emacs buffer mode. This
      mode greatly simplify locating compilation errors in the Java
      source code. For example, to find the line that cause a
      compilation error, simply click the error message in the
      compilation buffer. </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE uses the Emacs command <fo:block color="red">&lt;varname&gt;start-process-shell-command&lt;/varname&gt;</fo:block>
      to launch a Java compile process. This command in turn uses the equivalent of</fo:block>
         <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
      SHELL COMMAND_SWITCH javac OPTIONS BUFFER_NAME.java
    </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  to launch the compile process where <fo:block color="red">&lt;varname&gt;SHELL&lt;/varname&gt;</fo:block> is
      the command shell  specified by the Emacs variable
      <fo:block color="red">&lt;varname&gt;shell-file-name&lt;/varname&gt;</fo:block>  and 
      <fo:block color="red">&lt;varname&gt;COMMAND_SWITCH&lt;/varname&gt;</fo:block> is the value of the Emacs  variable
      <fo:block color="red">&lt;varname&gt;shell-command-switch&lt;/varname&gt;</fo:block>. You must set these variables
      to be  compatible in your <fo:inline font-family="monospace">.emacs</fo:inline> file. For example,
      if you set <fo:block color="red">&lt;varname&gt;shell-file-name&lt;/varname&gt;</fo:block> to
      <fo:block color="red">&lt;varname&gt;bash&lt;/varname&gt;</fo:block>, you must set
      <fo:block color="red">&lt;varname&gt;shell-command-switch&lt;/varname&gt;</fo:block> to <fo:block color="red">&lt;varname&gt;-c&lt;/varname&gt;</fo:block>, the
      command   switch used by <fo:block color="red">&lt;varname&gt;bash&lt;/varname&gt;</fo:block>.
    </fo:block>
         <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
            <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Compile processes are the only processes launched by JDE, using a
	command shell. The JDE uses the Emacs command <fo:block color="red">&lt;varname&gt;start-process&lt;/varname&gt;</fo:block> to launch all
	other processes, e.g., java, jdb, and JDEbug processes. The <fo:block color="red">&lt;varname&gt;start-process&lt;/varname&gt;</fo:block>
	launches processes as subprocesses of Emacs, without doing any wild-card expansion or
	environment variable substitution of command-line arguments.
      </fo:block>
         </fo:block>
         <fo:block id="c41b2b3b6">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Compilation Options</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE allows you to specify compilation options by
	setting  compilation variables.You must use the Emacs
	customization  feature or, if available, JDE functions to set
	compilation  variables. To use the customization feature,
	select JDE-&gt;Options-&gt;Compile.  (See
	<fo:simple-link external-destination="#ConfiguringJDE">Configuring  the JDE</fo:simple-link> [#ConfiguringJDE] for
	more information on using the customization  feature). To save
	the compilation settings in the project  file (see <fo:simple-link external-destination="#UsingProjectFiles">Using Project Files</fo:simple-link> [#UsingProjectFiles])  for the current source buffer, select JDE-&gt;Options-&gt;Update  Project.
      </fo:block>
            <fo:block id="c41b2b3b6b2">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Setting Compile Options Interactively</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you set the customization variable
	  <fo:block color="red">&lt;varname&gt;jde-read-compile-args&lt;/varname&gt;</fo:block>  to a
	  non-<fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block> value, the JDE compile command prompts you
	  to enter compilation options in the minibuffer. It appends the  options
	  that you enter to the options specified via customization  variables.
	  The JDE saves the arguments that you enter in a  minibuffer history
	  list. You can recall previously entered  options by pressing the up or
	  down arrows on your keyboard. </fo:block>
               <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                  <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                  <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE uses the values of the JDE customization  variables to
	    set the compiler's command-line option switches. The  JDE assumes that
	    the compiler you are using (specified by the  customization variable
	    <fo:block color="red">&lt;varname&gt;jde-compiler&lt;/varname&gt;</fo:block>) has the same set of  command-line
	    switches as the latest version of <fo:block color="red">&lt;varname&gt;javac&lt;/varname&gt;</fo:block> , the
	    compiler supplied with JavaSoft's JDK. If the command-line  switch for
	    a particular option supported by the compiler  your are using is not
	    the same as that specified by the latest  version of
	    <fo:block color="red">&lt;varname&gt;javac&lt;/varname&gt;</fo:block>, you must use the variable
	    <fo:block color="red">&lt;varname&gt;jde-compile-option-command-line-args&lt;/varname&gt;</fo:block>  to select the
	    option.</fo:block>
               </fo:block>
            </fo:block>
            <fo:block id="c41b2b3b6b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Customization Variables</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following table lists the JDE compilation variables and
	  the functions used to set them.</fo:block>
               <fo:table-and-caption id="c41b2b3b6b3b2" keep-together.within-column="always">
                  <fo:table-caption>
                     <fo:block font-weight="bold">Table 3.1. </fo:block>
                  </fo:table-caption>
                  <fo:table>
                     <fo:table-column column-number="1"/>
                     <fo:table-column column-number="2"/>
                     <fo:table-column column-number="3"/>
                     <fo:table-header>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Name</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Group</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Usage</fo:block>
                              </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                     </fo:table-header>
                     <fo:table-body>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                    <fo:block color="red">&lt;varname&gt;jde-compiler&lt;/varname&gt;</fo:block>
                                 </fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Project</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specifies the compiler  (javac, by default)
		    to use to compile the code in  the current source buffer. The command
		    <fo:block color="red">&lt;varname&gt;jde-set-compiler&lt;/varname&gt;</fo:block>  sets the buffer-local value of
		    this option.
                                 </fo:block>
                              </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-command-line-&lt;/varname&gt;</fo:block> 
		  
		  
                                 <fo:block color="red">&lt;varname&gt;args&lt;/varname&gt;</fo:block> 
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specifies a string of
		  command-line arguments to be passed to the compiler.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Project</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify class paths
		  for compile, run, and debug commands.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-read-compile-args&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Project</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify whether to read compile
		  options from the minibuffer.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-classpath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specifies the
		  classpath for compile command. If set, this variable
		  overrides <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>. 
                              </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-sourcepath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specifies the path of source files
		  for classes required to compile the current class.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-quote-classpath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Project </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Quote the classpath
		  argument.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-directory&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specifies the
		  directory into which to place the compiled class. </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-deprecation&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Warn of use or
		  override of a deprecated member or class </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-debug&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Generate information
		  about local variables for debug tools. </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-optimize&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Directs the compiler
		  to try to generate faster varname. </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-depend&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Analyze dependencies.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-depend-switch&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Command line switch that causes the
		  compiler to analyze dependencies.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-vm-args&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify command-line
		  arguments for Java interpreter used to run the compiler. </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-verbose-path&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Print verbose messages.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-verbose&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>List directories searched to
		  compile current class.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-nowarn&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Turn off warnings.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-encoding&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify the source
		  file encoding name, such as EUCJIS\SJIS. </fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-target&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Generate code compatible with a
		  specified vm version.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-bootclasspath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify classpath of standard
		  libraries for target vm.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                        <fo:table-row>
                           <fo:table-cell>
                              <fo:block>
                                 <fo:block color="red">&lt;varname&gt;jde-compile-option-bootclasspath&lt;/varname&gt;</fo:block>
                              </fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Compile</fo:block>
                           </fo:table-cell>
                           <fo:table-cell>
                              <fo:block>Specify path of directories
		  containing extensions for target vm.</fo:block>
                           </fo:table-cell>
                        </fo:table-row>
                     </fo:table-body>
                  </fo:table>
               </fo:table-and-caption>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b4">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">4. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Building Java Applications</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE-&gt;Build
      command builds  or rebuilds an application. This command has two
      operating modes:  java and make. In java mode, this command uses
      javac's built-in  make (<fo:block color="red">&lt;varname&gt;-depend&lt;/varname&gt;</fo:block>) facility to rebuild
      a project. In make  mode, this command uses a user-specified make
      utility, such as  GNU make, to rebuild a project. See <fo:simple-link external-destination="#SampleMakefile">Sample Makefile</fo:simple-link> [#SampleMakefile] for an example  of a
      makefile for building a Java project. JDE configuration  variables
      control which mode is used. In particular, if the  variable
      <fo:block color="red">&lt;varname&gt;jde-build-use-make&lt;/varname&gt;</fo:block> is non-<fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block>,
      this  command invokes the make program specified by the variable
      <fo:block color="red">&lt;varname&gt;jde-make-program&lt;/varname&gt;</fo:block>.  If the variable
      <fo:block color="red">&lt;varname&gt;jde-make-args&lt;/varname&gt;</fo:block> is a non-empty string,  this function
      uses its contents to invoke make; otherwise, it  prompts you to enter
      command-line arguments for make. If
      <fo:block color="red">&lt;varname&gt;jde-build-use-make&lt;/varname&gt;</fo:block>  is <fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block>, this
      function invokes javac on the source file  for the class specified by
      <fo:block color="red">&lt;varname&gt;jde-run-app-class&lt;/varname&gt;</fo:block>, with the
      <fo:block color="red">&lt;varname&gt;-depend&lt;/varname&gt;</fo:block>  option. This causes javac to recompile all
      missing or out-of-date  files required to run the application's main
      class. JDE finds the  source for your application's main class by
      searching the  directories specified by
      <fo:block color="red">&lt;varname&gt;jde-db-source-directories&lt;/varname&gt;</fo:block>. Thus,  you must set this
      variable to use the Java build mode. </fo:block>
         <fo:block id="c41b2b4b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Build Options
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following table summarizes the usage of the build
	configuration variables.</fo:block>
            <fo:table-and-caption id="c41b2b4b2b2" keep-together.within-column="always">
               <fo:table-caption>
                  <fo:block font-weight="bold">Table 4.1. </fo:block>
               </fo:table-caption>
               <fo:table>
                  <fo:table-column column-number="1"/>
                  <fo:table-column column-number="2"/>
                  <fo:table-column column-number="3"/>
                  <fo:table-header>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>Name</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Group</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Usage</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-header>
                  <fo:table-body>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-build-use-make&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>A non-nil values causes the JDE to use a make utility
		(specified by <fo:block color="red">&lt;varname&gt;jde-make-program&lt;/varname&gt;</fo:block>) to execute the
		JDE-&gt;Build command. A nil values causes the JDE to use
		
                              <fo:block color="red">&lt;varname&gt;javac&lt;/varname&gt;</fo:block>  with the 
                              <fo:block color="red">&lt;varname&gt;-depend&lt;/varname&gt;</fo:block> option to
		execute the
		JDE-&gt;Build  command.
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-make-program&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specifies the name of the make utility used to  execute the
		JDE-&gt;Build command. The default  values is
		<fo:block color="red">&lt;varname&gt;make&lt;/varname&gt;</fo:block>.
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-make-args&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specifies a string of command-line arguments (for  example,
		"<fo:block color="red">&lt;varname&gt;-f mymakefile all&lt;/varname&gt;</fo:block>") to be passed to  the
		make utility used to execute the JDE-&gt;Build  command. If the null
		string (""), the JDE  prompts the user to enter the
		command-line arguments in  the minibuffer.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-body>
               </fo:table>
            </fo:table-and-caption>
            <fo:block id="c41b2b4b2b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Sample Makefile
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following is a sample makefile that you can use as a model
	  for creating makefiles to build Java projects. </fo:block>
               <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	  JDK = d:/jdk1.2/lib/classes.zip 
	  JMATH = d:/jmath/src 
	  CLASSPATH = $(JMATH);$(JDK) 
	  COMPILER = javac 
	  VM = java 
	  COPTIONS = -g -deprecation 
	  ROPTIONS = 
	  
	  CLASSES = Test.class \ 
          JMathError.class \ 
          JMathException.class \ 
          LinearSystem.class 
	  
	  .SUFFIXES: .java .class 
	  
	  all : $(CLASSES) 
	  
	  # Rebuild (if necessary) and run the JMath test suite.
	  
	  run: $(CLASSES) 
	  $(VM) -classpath "$(CLASSPATH)" jmath.Test
	  
	  
	  # Remove all class files from the project directory. 
	  clean: 
	  rm *.class 
	  
	  # Implicit rule for making Java class files from Java
	  
	  # source files. 
	  .java.class: 
	  $(COMPILER) $(COPTIONS) -classpath "$(CLASSPATH)" $? 
	</fo:block>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b5">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">5. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Running Java Applications</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE allows you to run a Java application as an Emacs
      subprocess. You can run multiple applications concurrently, but
      only one instance of each application at a time. The JDE displays
      each application's standard and error output in an Emacs command
      interface (<fo:block color="red">&lt;varname&gt;comint&lt;/varname&gt;</fo:block>) buffer. You can interact with
      applications that accept command line input via the <fo:block color="red">&lt;varname&gt;comint&lt;/varname&gt;</fo:block>
      buffer. When interacting with an application, you can use any of <fo:block color="red">&lt;varname&gt;comint-mode&lt;/varname&gt;</fo:block>'s
      extensive set of command-line history commands to speed
      interaction. To run an application, enter </fo:block>
         <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
      M-x jde-run
    </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">or select Java-&gt;Run App on the
      Emacs menubar or type C-c C-v C-r. </fo:block>
         <fo:block id="c41b2b5b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Specifying a Startup Directory</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE can start an application from any directory that you
	specify. By default, the JDE starts an application from the
	default directory of the current source buffer. The default
	directory of the current source buffer is the directory
	containing the source file displayed in the buffer. You can
	specify another directory as the startup directory by setting the
	JDE customization variable <fo:block color="red">&lt;varname&gt;jde-run-working-directory&lt;/varname&gt;</fo:block>.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To set this variable, </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Display its customization panel.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can do this by  typing </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">M-x <fo:block color="red">&lt;varname&gt;customize-variable&lt;/varname&gt;</fo:block> <fo:block color="red">&lt;varname&gt;jde-run-working-directory&lt;/varname&gt;</fo:block>
                        </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">or selecting JDE-&gt;Options-&gt;Project
	    to display the project customization  panel and searching this panel
	    for <fo:block color="red">&lt;varname&gt;jde-run-working-directory&lt;/varname&gt;</fo:block>.
	  </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    
                           <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                 <fo:external-graphic src="file:images/WorkingDirectory.gif" width="auto" height="auto"/>
                              </fo:block>&lt;/screenshot&gt;</fo:block>
	  
                        </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Enter the working directory in the variable's edit field. </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>3.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Save the new setting.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To save the edited bindings,  right click the
	    [State]  button and choose Set for current  session if you
	    want the settings to apply only  to the current project or Save for  future sessions if
	    you want the settings to  apply to all projects. In either case, you
	    should save  the new settings in you project file if your project has  a
	    project file. To save the new settings in your project  file, switch to
	    a source buffer and choose JDE-&gt;Options-&gt;Save
		Project.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2b5b5">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Setting VM Command-Line Arguments</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you set the customization variable
	<fo:block color="red">&lt;varname&gt;jde-run-read-vm-args&lt;/varname&gt;</fo:block>  to a
	non-<fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block> value, the JDE compile command prompts you
	to enter virtual machine options in the minibuffer. It appends  the
	options that you enter to the options specified via  customization
	variables. The JDE saves the arguments that you  enter in a minibuffer
	history list. You can recall previously  entered options by pressing
	the up or down arrows on your  keyboard. </fo:block>
         </fo:block>
         <fo:block id="c41b2b5b6">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Setting Command-Line Application Arguments</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you set the customization variable
	<fo:block color="red">&lt;varname&gt;jde-run-read-app-args&lt;/varname&gt;</fo:block>  to a
	non-<fo:block color="red">&lt;varname&gt;nil&lt;/varname&gt;</fo:block> value, the JDE compile command prompts you
	to enter command-line application arguments in the minibuffer. It
	appends the options that you enter to the arguments specified via  the
	customization variable
	<fo:block color="red">&lt;varname&gt;jde-run-option-application-args&lt;/varname&gt;</fo:block>.  The JDE saves the
	arguments that you enter in a minibuffer  history list. You can recall
	previously entered options by  pressing the up or down arrows on your
	keyboard. </fo:block>
         </fo:block>
         <fo:block id="c41b2b5b7">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Run Customization Variables </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE allows you to specify run-time options by setting run
	variables.You can use the Emacs customization feature to set run-time
	variables interactively. To use the customization feature, select
	JDE-&gt;Project-&gt;Options-&gt;Run.
	(See <fo:simple-link external-destination="#ConfiguringJDE">Configuring  the JDE</fo:simple-link> [#ConfiguringJDE] for more
	information on using the customization  feature). To save the
	compilation settings in the project file (see <fo:simple-link external-destination="#UsingProjectFiles">Using Project Files</fo:simple-link> [#UsingProjectFiles]) for the  current
	source buffer, select JDE-&gt; Project-&gt;Project
	    File-&gt;Save  Project.
      </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following table lists the JDE run variables and the
	functions used to set them. 
	  </fo:block>
            <fo:table-and-caption id="c41b2b5b7b3" keep-together.within-column="always">
               <fo:table-caption>
                  <fo:block font-weight="bold">Table 5.1. </fo:block>
               </fo:table-caption>
               <fo:table>
                  <fo:table-column column-number="1"/>
                  <fo:table-column column-number="2"/>
                  <fo:table-column column-number="3"/>
                  <fo:table-header>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>Variable</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Group</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Usage</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-header>
                  <fo:table-body>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-mode-hook&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>List of hook functions run by <fo:block color="red">&lt;varname&gt;jde-run-mode&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-working-directory&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Startup directory for running or debugging Java
		applications.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-application-class&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Name of the Java class to run. The
		command <fo:block color="red">&lt;varname&gt;jde-run-set-app&lt;/varname&gt;</fo:block> sets the buffer-local
		value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-java-vm&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify Java interpreter for non-Windows
		platforms. The command <fo:block color="red">&lt;varname&gt;jde-run-set-vm&lt;/varname&gt;</fo:block> sets the
		buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-java-vm-w&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify Java interpreter for Windows
		platforms. The command <fo:block color="red">&lt;varname&gt;jde-run-set-vm-w&lt;/varname&gt;</fo:block> sets the
		buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify class paths for compile, run,
		and debug commands. The command<fo:block color="red">&lt;varname&gt; jde-set-global-classpath&lt;/varname&gt;</fo:block>
		sets the buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-classic-mode-vm&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specifies that the JDE should run the JDK's classic version
		of the Java virtual machine (as opposed to the HotSpot version).
		This option applies only to versions of the JDK that include
		both a classic and a HotSpot vm.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-read-vm-args&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specifies whether to read vm arguments from the 
		minibuffer.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specifies the classpath for  the
		Java interpreter. This option overrides the jde-global-classpath
		option. </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-verbose&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Print messages about the running process. </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-properties&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify property values.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-heap-size&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify the initial and maximum size of
		the interpreter heap. </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-stack-size&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify size of the C and Java stacks.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-garbage-&lt;/varname&gt;</fo:block>  
		
                              <fo:block color="red">&lt;varname&gt;collection&lt;/varname&gt;</fo:block> 
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify garbage collection options. </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-java-profile&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Enable Java profiling.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-heap-profile&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Output heap profiling data.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-verify&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Verify classes.</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-vm-args&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify command-line arguments to be
		passed to the Java vm. The command jde-run-set-args sets
		the buffer-local value of this variable. </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-option-application-args&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Run </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify command-line arguments to pass
		to the application. The command <fo:block color="red">&lt;varname&gt;jde-run-set-app-args &lt;/varname&gt;</fo:block>sets
		the buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-body>
               </fo:table>
            </fo:table-and-caption>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b6">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">6. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Working with Applets</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE provides specialized commands for running and
      debugging applets.</fo:block>
         <fo:block id="c41b2b6b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Running Applets
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To run an applet:</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Open the applet's source file in a buffer. </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Choose JDE-&gt;Run Applet. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE searches for an html file in the directory  containing
	    the applet source file and displays the first  file it finds, using
	    your system's default browser. If  the JDE cannot find an html page in
	    the applet's source  file directory, it signals an error by default.
	  </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The  JDE-&gt;Run Applet command assumes by
	default that the directory containing the  applet's source also
	contains an html page for testing that  applet. If this is not true in
	your case, you have two options.  You can either specify the path of
	the applet file via the JDE  customization variable
	<fo:block color="red">&lt;varname&gt;jde-run-applet-doc&lt;/varname&gt;</fo:block> or you can use  the
	<fo:block color="red">&lt;varname&gt;jde-run-applet&lt;/varname&gt;</fo:block> command to run your applet. If the
	<fo:block color="red">&lt;varname&gt;jde-run-applet-doc&lt;/varname&gt;</fo:block>  variable is not a null string,
	 JDE-&gt;Run Applet displays the
	document that the variable  specifies instead of searching the source
	file directory for a  document to display. The
	<fo:block color="red">&lt;varname&gt;jde-run-applet&lt;/varname&gt;</fo:block> command prompts  you to enter in the
	minibuffer the path of an html file to  display. If you enter nothing,
	the command defaults to the  behavior of  JDE-&gt;Run Applet.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The run commands chooses the viewer as follows. If <fo:block color="red">&lt;varname&gt;jde-run-applet-viewer&lt;/varname&gt;</fo:block>
	is a null string (the default) or browse-url, the JDE uses browse-url
	to launch the applet doc in your system's default browser.
	Otherwise, the menu command uses comint to launch the viewer (e.g.,
	appletviewer) specified by <fo:block color="red">&lt;varname&gt;jde-run-applet-viewer&lt;/varname&gt;</fo:block>.</fo:block>
         </fo:block>
         <fo:block id="c41b2b6b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Debugging Applets
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To debug an applet:</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Open the applet's source file in a buffer.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Choose  JDE-&gt;Debug Applet.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE searches for an html file in the directory  containing
	    the applet source file. If the JDE cannot find  an html page in the
	    applet's source file directory, it  signals an error by default.
	    Otherwise, it runs  appletviewer in debug mode on the first file that
	    it  finds.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The Emacs window splits into two panes.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The top pane shows the applet's source file with the debug
	cursor pointing to the first line of the applet's init file. The
	bottom pane displays the debugger's command line interface. You
	can now set breakpoints, single-step, or continue running the
	applet. See <fo:simple-link external-destination="#DebuggingApps">Debugging Applications</fo:simple-link> [#DebuggingApps]
	for more information.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you want to specify the document to be used to test the
	applet, customize the variable jde-run-applet-doc or execute <fo:block color="red">&lt;varname&gt;M-x
	  jde-db-applet&lt;/varname&gt;</fo:block>. This command prompts you to enter the test
	document's name.</fo:block>
         </fo:block>
         <fo:block id="c41b2b6b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Applet Customization Variables</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE allows you to specify run-time options for applets by
	setting JDE configuration variables.You must use the Emacs
	customization feature to set applet run-time variables . To use the customization feature, select JDE-&gt;Options-&gt;Run.
	(See <fo:simple-link external-destination="#ConfiguringJDE">Configuring the JDE</fo:simple-link> [#ConfiguringJDE] for
	more information on using the customization feature). In some
	cases, the JDE also provides functions for setting the buffer-local
	values of the compilation variables. To save the compilation
	settings in the project file (see <fo:simple-link external-destination="#UsingProjectFiles">Using
	  Project Files</fo:simple-link> [#UsingProjectFiles]) for the current source buffer, select
	JDE-&gt;Options-&gt;Update Project. </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following table lists the JDE applet run-time variables
	and the functions used to set them.  </fo:block>
            <fo:table-and-caption id="c41b2b6b4b3" keep-together.within-column="always">
               <fo:table-caption>
                  <fo:block font-weight="bold">Table 6.1. </fo:block>
               </fo:table-caption>
               <fo:table>
                  <fo:table-column column-number="1"/>
                  <fo:table-column column-number="2"/>
                  <fo:table-column column-number="3"/>
                  <fo:table-header>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>Variable</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Group</fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Usage</fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-header>
                  <fo:table-body>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-applet-viewer&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify name of viewer to use to display
		page containing the applet. The command <fo:block color="red">&lt;varname&gt;jde-run-set-applet-viewer&lt;/varname&gt;</fo:block>
		sets the buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                     <fo:table-row>
                        <fo:table-cell>
                           <fo:block>
                              <fo:block color="red">&lt;varname&gt;jde-run-applet-doc&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Project </fo:block>
                        </fo:table-cell>
                        <fo:table-cell>
                           <fo:block>Specify name of document containing
		applet to be viewed. The command <fo:block color="red">&lt;varname&gt;jde-run-set-applet-doc&lt;/varname&gt;</fo:block>
		sets the buffer-local value of this variable. 
                           </fo:block>
                        </fo:table-cell>
                     </fo:table-row>
                  </fo:table-body>
               </fo:table>
            </fo:table-and-caption>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b7">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">7. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Debugging Applications</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE provides two options for debugging Java applications.</fo:block>
         <fo:list-block id="c41b2b7b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
            <fo:list-item id="c41b2b7b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>An Emacs interface to <fo:inline font-weight="bold">jdb</fo:inline>, the command-line
	  debugger that comes with the JDK. See <fo:simple-link external-destination="../jdb-ug/jdb-guide.html">Debugging with jdb</fo:simple-link> [../jdb-ug/jdb-guide.html] for more
	  information. </fo:block>
               </fo:list-item-body>
            </fo:list-item>
            <fo:list-item id="c41b2b7b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>
	  JDEbug, a Java debugger developed specifically for use  with the JDE.
	  See <fo:simple-link external-destination="../jdebug-ug/jdebug-ug.html">JDEbug
	    User's Guide</fo:simple-link> [../jdebug-ug/jdebug-ug.html] for more information</fo:block>
               </fo:list-item-body>
            </fo:list-item>
         </fo:list-block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JDEbug provides more debugging features but requires a JDK 1.2
      or higher vm. You must use <fo:inline font-weight="bold">jdb</fo:inline> to debug applications
      running on earlier vms.</fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b8">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">8. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Specifying Classpaths</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE provides customization variables that permit you to specify 
      a classpath for the JDE's compile, run, debug, Beanshell, and other 
      commands. The following table lists these variables.</fo:block>
         <fo:table-and-caption id="c41b2b8b2" keep-together.within-column="always">
            <fo:table-caption>
               <fo:block font-weight="bold">Table 8.1. Classpath Variables</fo:block>
            </fo:table-caption>
            <fo:table>
               <fo:table-column column-number="1"/>
               <fo:table-column column-number="2"/>
               <fo:table-header>
                  <fo:table-row>
                     <fo:table-cell>
                        <fo:block>Variable</fo:block>
                     </fo:table-cell>
                     <fo:table-cell>
                        <fo:block>Applies To ...</fo:block>
                     </fo:table-cell>
                  </fo:table-row>
               </fo:table-header>
               <fo:table-body>
                  <fo:table-row>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                              <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:block>
                     </fo:table-cell>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">All JDE commands that use a classpath.</fo:block>
                        </fo:block>
                     </fo:table-cell>
                  </fo:table-row>
                  <fo:table-row>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                              <fo:block color="red">&lt;varname&gt;jde-compile-option-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:block>
                     </fo:table-cell>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Compile command</fo:block>
                        </fo:block>
                     </fo:table-cell>
                  </fo:table-row>
                  <fo:table-row>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                              <fo:block color="red">&lt;varname&gt;jde-run-option-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:block>
                     </fo:table-cell>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Run App command</fo:block>
                        </fo:block>
                     </fo:table-cell>
                  </fo:table-row>
                  <fo:table-row>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                              <fo:block color="red">&lt;varname&gt;jde-db-option-classpath&lt;/varname&gt;</fo:block>
                           </fo:block>
                        </fo:block>
                     </fo:table-cell>
                     <fo:table-cell>
                        <fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Debug App command</fo:block>
                        </fo:block>
                     </fo:table-cell>
                  </fo:table-row>
               </fo:table-body>
            </fo:table>
         </fo:table-and-caption>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> variable is so
      named because it specifies a classpath that is used by all JDE
      commands unless overridden by a classpath variable specific to a
      particular command. For example, the JDE's
      <fo:inline font-weight="bold">Compile</fo:inline> command uses
      <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> unless the value of
      <fo:block color="red">&lt;varname&gt;jde-compile-option-classpath&lt;/varname&gt;</fo:block> is set.
      Typically you want to use the same classpath to compile, run,
      and debug an application. So typically
      <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> is the only variable you
      need to set.</fo:block>
         <fo:block id="c41b2b8b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Setting a Classpath Variable</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">As with other JDE customization variables, you must use Emacs'
	<fo:inline font-weight="bold">customize-variable</fo:inline> command to 
	set the JDE's classpath variables. When setting a classpath variable,
	you must enter each path as a separate entry in the customization
	buffer. Do not enter the paths as semicolon or colon-separated lists
	of paths. The following examples show the right and wrong way to
	specify a classpath.</fo:block>
            <fo:block keep-together.within-column="always" id="c41b2b8b4b2">
               <fo:block>Example 8.1. Wrong Way to Specify a Classpath</fo:block>
               <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	  jde-global-classpath: [Hide]
	  [INS] [DEL] Path: c:/jde-dev/jmath/classes;c:/jde-dev/jmath/src
	  [INS]
	  [State]: this option has been set and saved.
	</fo:block>
            </fo:block>
            <fo:block keep-together.within-column="always" id="c41b2b8b4b3">
               <fo:block>Example 8.2. Right Way to Specify a Classpath</fo:block>
               <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	  jde-global-classpath: [Hide]
	  [INS] [DEL] Path: c:/jde-dev/jmath/classes
	  [INS] [DEL] Path: c:/jde-dev/jmath/src
	  [INS]
	  [State]: this option has been set and saved.
	</fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2b8b5">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Environment Variables in Classpaths</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can use environment variables in classpaths. For example,</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">      
	
               <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
	$JDE_HOME/java/classes
      </fo:block> 
      
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">is a valid entry in a classpath. The JDE substitutes the
	actual value of an environment variable wherever the variable
	occurs in the classpath.</fo:block>
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
               <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You must use the Unix notation for environment variables
	  on Windows, e.g., <fo:block color="red">&lt;varname&gt;$JDE_HOME&lt;/varname&gt;</fo:block> or
	  <fo:block color="red">&lt;varname&gt;${JDE_HOME}&lt;/varname&gt;</fo:block>. Emacs does not accept DOS
	  notation, e.g., <fo:block color="red">&lt;varname&gt;%JDE_HOME%&lt;/varname&gt;</fo:block>.</fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2b8b6">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Using Cygwin Paths</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can use cygwin style paths in JDE classpath variables
	on Windows. The JDE converts such paths to DOS paths before
      using them, using a conversion function that you can specify.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The jde-cgywin-path-converter variable allows you
      to choose the path conversion function used by the JDE.</fo:block>
            <fo:list-block id="c41b2b8b6b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item id="c41b2b8b6b3a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
                        <fo:inline font-family="monospace">
	    jde-cygwin-path-converter-internal</fo:inline>
                     </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This is the default path conversion function used by
	    the JDE. It converts any paths of the form <fo:block color="red">&lt;varname&gt;//[a-z]/&lt;/varname&gt;</fo:block>
	    or <fo:block color="red">&lt;varname&gt;//cygdrive/[a-z]/&lt;/varname&gt;</fo:block> to the corresponding DOS form. For
	    example it converts  <fo:block color="red">&lt;varname&gt;/c/jde/java/classes&lt;/varname&gt;</fo:block> to 
	    <fo:block color="red">&lt;varname&gt;c:/jde/java/classes&lt;/varname&gt;</fo:block>.	    
	  </fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b8b6b3b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>
                        <fo:inline font-family="monospace">jde-cygwin-path-converter-cygpath</fo:inline>
                     </fo:block>
                     <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This function invokes the cygwin <fo:inline font-family="monospace">cygpath</fo:inline> utility to
	  perform the path conversion. The advantage is that the cygwin path utility can
	  recognize and convert Unix style paths that represent mount points in the cygwin 
	    mount table. For example, suppose that you have mounted 
	    <fo:block color="red">&lt;varname&gt;d:/javadev&lt;/varname&gt;</fo:block> as <fo:block color="red">&lt;varname&gt;/javadev&lt;/varname&gt;</fo:block> in
	  the cygwin mount table. Then choosing
	    <fo:inline font-family="monospace">jde-cygwin-path-converter-cygpath</fo:inline>
	    allows you to use paths beginning with <fo:block color="red">&lt;varname&gt;/javadev&lt;/varname&gt;</fo:block> in JDE classpaths. The 
	  drawback is that the conversion is slow as it requires running the cygwin utility
	  for each Unix-style path to be converted.</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
               <fo:list-item id="c41b2b8b6b3b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item-label>
                     <fo:block>•</fo:block>
                  </fo:list-item-label>
                  <fo:list-item-body>
                     <fo:block>A custom conversion function that you supply.</fo:block>
                  </fo:list-item-body>
               </fo:list-item>
            </fo:list-block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2b9">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">9. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Using Project Files</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A project file is a Lisp file that the JDE loads and evaluates
      whenever you open a Java source file belonging to a specific
      project. Project files allow you to save and restore project-specific
      JDE configurations. For example, you can use a project file to
      set the value of the <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block> variable to a
      project-specific classpath automatically whenever you load a file
      belonging to that project. </fo:block>
         <fo:block id="c41b2b9b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> How the JDE Finds Project Files</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To simplify the task of finding project files, the JDE makes
	two assumptions. First, it assumes that all Java source files
	relating to a particular project live in a single directory tree.
	Second, it assumes that all project files have the same file name.
	The name assumed by default is  prj.el. You can use the JDE
	configuration variable <fo:block color="red">&lt;varname&gt;jde-project-file-name&lt;/varname&gt;</fo:block> to specify
	another name. When you open a Java source file, the JDE looks for
	a project file in the directory containing the source file. If it
	cannot find a project file in the source file directory, it
	searches up the directory tree until it finds a project file or
	reaches the root of the directory tree. If the JDE finds a
	project file, it loads and evaluates the contents of the file as
	the last step in creating the buffer containing the Java source
	file. </fo:block>
         </fo:block>
         <fo:block id="c41b2b9b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Project File Contents</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A project file can contain any Lisp code that can be evaluated
	correctly as the last step in creating a Java source buffer. For
	example, a project file can contain code that sets the value of JDE
	configuration variables. In general, a project file can  contain any
	code that could be implemented as a <fo:block color="red">&lt;varname&gt;jde-mode&lt;/varname&gt;</fo:block> hook
	function. In fact, you can think of a project file as a
	project-specific  <fo:block color="red">&lt;varname&gt;jde-mode&lt;/varname&gt;</fo:block> hook function. </fo:block>
         </fo:block>
         <fo:block id="c41b2b9b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Creating a Project File</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The easiest way to create a project file is to use the
	<fo:block color="red">&lt;varname&gt;jde-save-project &lt;/varname&gt;</fo:block> command (JDE-&gt;Project-&gt;Project
	    File-&gt;Save
	    Project). This command  saves the current
	values of all the JDE configuration variables  in the project file for
	the selected Java buffer. (To be precise,  the command inserts Lisp
	code in the project file that restores  the current settings of the
	configuration variables; if such code  already exists in the file, it
	replaces it with updated code.) If  the project file does not exist,
	the command creates the project  file. Thus, to create a project file
	that sets JDE configuration  variables to project-specific values:
      </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Open any source file belonging to the project.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Set the values of the JDE configuration variables to the
	    appropriate values for the project to which the source  file
	    belongs.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>3.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">See <fo:simple-link external-destination="#ConfiguringJDE">Configuring the JDE</fo:simple-link> [#ConfiguringJDE]  for
	    information on how to set the values of the JDE  configuration
	    variables.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>4.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Select JDE-&gt;Project-&gt;Project
		File-&gt;Save  Project
	    to create a project file in the directory containing  the source
	    file.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Once you have created the project file, you can insert
	additional configuration code into the file if desired. Note that
	the <fo:block color="red">&lt;varname&gt;jde-save-project&lt;/varname&gt;</fo:block> command edits rather than replaces
	existing project files. Thus, you can use the command to update
	configuration variable settings without disturbing any other
	configuration code that you have inserted manually into the
	project file. 
      </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2c10">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">10. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Displaying Java Documentation</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      The JDE provides commands for displaying the JDK API documentation
      and context-sensitive help for classes.
    </fo:block>
         <fo:block id="c41b2c10b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Browsing JDK Documentation</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:block color="red">&lt;varname&gt;jde-browse-jdk-doc&lt;/varname&gt;</fo:block> command (JDE-&gt;Browse JDK
	    Doc, C-c 
	C-v C-n) opens
	the JDK documentation in a
	browser. By default, this command displays the JDK documentation
	page at JavaSoft's web site. To display a different copy, set the
	variable <fo:block color="red">&lt;varname&gt;jde-jdk-doc-url&lt;/varname&gt;</fo:block> to the url of the index page of
	the copy you want to be displayed. </fo:block>
         </fo:block>
         <fo:block id="c41b2c10b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Context-Sensitive Class Help</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDK provides context-sensitive help for Java classes. To
	use this facility, you must first customize the variable
	<fo:block color="red">&lt;varname&gt;jde-help-docsets&lt;/varname&gt;</fo:block> to specify the
	location of class documentation on your system. The JDE
	class help facility supports javadoc documentation by default
	but it works with other types of documentation as well.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Once you have specified the location of class documentation 
	on your system, you can get help for the class at point in the
	current buffer by selecting JDE-&gt;Help-&gt;Symbol
	    at Point . </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2c11">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">11. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Browsing Source Code</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE provides the following facilities for browsing Java source code:</fo:block>
         <fo:list-block id="c41b2c11b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
            <fo:list-item id="c41b2c11b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>
                     <fo:simple-link external-destination="#ShowClassSource">
                        <fo:block color="red">&lt;varname&gt;jde-show-class-source&lt;/varname&gt;</fo:block> command</fo:simple-link> [#ShowClassSource]</fo:block>
               </fo:list-item-body>
            </fo:list-item>
            <fo:list-item id="c41b2c11b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>
                     <fo:simple-link external-destination="#ClassesMenu">Classes index menu</fo:simple-link> [#ClassesMenu]</fo:block>
               </fo:list-item-body>
            </fo:list-item>
            <fo:list-item id="c41b2c11b2b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>
                     <fo:simple-link external-destination="#Speedbar">Speedbar</fo:simple-link> [#Speedbar]</fo:block>
               </fo:list-item-body>
            </fo:list-item>
            <fo:list-item id="c41b2c11b2b3" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
               <fo:list-item-label>
                  <fo:block>•</fo:block>
               </fo:list-item-label>
               <fo:list-item-body>
                  <fo:block>
                     <fo:simple-link external-destination="#Tags">Etags</fo:simple-link> [#Tags]</fo:block>
               </fo:list-item-body>
            </fo:list-item>
         </fo:list-block>
         <fo:block id="c41b2c11b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>jde-show-class-source Command</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  The <fo:block color="red">&lt;varname&gt;jde-show-class-source&lt;/varname&gt;</fo:block> command
	(C-c C-v C-y) finds and
	opens the Java source file for the class whose qualified or
	unqualified name appears at point.</fo:block>
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
               <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE uses Java reflection to determine the fully
	      qualified name of the class at point. Therefore, the
	      class must be on
	      <fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>.</fo:block>
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If more than one class with
	the same name exists on
	<fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>, this command prompts
	you to select one of the classes. The following conditions
	must be true for this command to work. First, a class file for
	this class must exist on the cclasspath specified by
	<fo:block color="red">&lt;varname&gt;jde-global-classpath&lt;/varname&gt;</fo:block>. Secondly, the source
	for the class must exist on one of the paths specified by
	<fo:block color="red">&lt;varname&gt;jde-db-source-directories&lt;/varname&gt;</fo:block>. This command
	uses the Beanshell to determine the fully qualified name of
	the class to be found. It starts the Beanshell if necessary.
	Thus, the command may respond somewhat slowly the first time
	you it in a session. </fo:block>
         </fo:block>
         <fo:block id="c41b2c11b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Classes Index Menu</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The Classes index
	menu appears by default in the Emacs menubar whenever a Java source
	buffer is active. The menu consists of a cascading list of all
	classes, methods, fields, and imports defined in the current buffer
	plus the package to which the current buffer belongs. Selecting any
	item scrolls the buffer to the statement that defines the item.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:block color="red">&lt;screenshot&gt;<fo:block>
                     <fo:external-graphic src="file:images/classes_menu1.gif" width="auto" height="auto"/>
                  </fo:block>&lt;/screenshot&gt;</fo:block>
      
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The top-level menu contains an entry for each each class
	defined by the active buffer followed by entries for the
	imports and package of the current buffer. Selecting the entry
	for a class displays a submenu listing the inner classes,
	methods, and fields defined by the class. Selecting the entry
	for an inner class displays another submenu for that class,
	and so on. Selecting the
	imports entry on
	the top-level menu displays a submenu listing all the classes
	and packages imported by the active buffer.</fo:block>
            <fo:block id="c41b2c11b4b4">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Special Index Entries</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The index menu includes the following special index
	  entries:</fo:block>
               <fo:list-block id="c41b2c11b4b4b2" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                  <fo:list-item id="c41b2c11b4b4b2a" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item-label>
                        <fo:block>•</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block>*Rescan*</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Selecting this item causes the JDE to rebuild the
	      index menu.  You should rebuild the menu whenever you
	      edit the buffer.
	    </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item id="c41b2c11b4b4b2b1" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
                     <fo:list-item-label>
                        <fo:block>•</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block>*class
		  def*</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Selecting this item takes you to the start of the
	      definition of  the class on whose submenu it appears.
	      Turn the variable 
	      <fo:block color="red">&lt;varname&gt;jde-imenu-include-classdef&lt;/varname&gt;</fo:block> off to
	      suppress inclusion  of these items in the menu. </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
            <fo:block id="c41b2c11b4b5">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Alphabetizing the Classes Menu</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">By default the
	  Classes menu
	  lists methods and fields in the order in which the active
	  buffer defines them. Use the variable
	  <fo:block color="red">&lt;varname&gt;jde-imenu-sort&lt;/varname&gt;</fo:block> to customize the menu to
	  list methods and fields alphabetically in either ascending
	  or descending order.</fo:block>
            </fo:block>
            <fo:block id="c41b2c11b4b6">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Suppressing Method Signatures and Field Types</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">By default the Classes menu displays the signatures of methods and the types of fields displayed in the active buffer. The method signatures enable you to distinguish overloaded method names. The menu can also display the names of methods and fields without signatures and types. Use the variable <fo:block color="red">&lt;varname&gt;jde-imenu-include-signature&lt;/varname&gt;</fo:block> to turn signature and type display off or on. </fo:block>
            </fo:block>
            <fo:block id="c41b2c11b4b7">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Disabling the Classes Menu</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Set the variable <fo:block color="red">&lt;varname&gt;jde-imenu-enable&lt;/varname&gt;</fo:block> off to disable the  Classes menu. When disabled, the menu does not appear in the Emacs menubar.</fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2c11b5">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Using the Speedbar</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To display the speedbar, select JDE-&gt; Speedbar. The
	speedbar opens in a separate frame.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:block color="red">&lt;screenshot&gt;<fo:block>
                     <fo:external-graphic src="file:images/speedbar1.gif" width="auto" height="auto"/>
                  </fo:block>&lt;/screenshot&gt;</fo:block>
      
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The speedbar displays a list of the files and
	subdirectories in the directory containing the file displayed
	in the current buffer. The speedbar highlights the file
	displayed in the current buffer.</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Click on the expand (+) button in front of any file. The
	node for the  file expands</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	
               <fo:block color="red">&lt;screenshot&gt;<fo:block>
                     <fo:external-graphic src="file:images/speedbar2.gif" width="auto" height="auto"/>
                  </fo:block>&lt;/screenshot&gt;</fo:block>
      
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">to show up to three entries, depending on the contents of
	the source file. </fo:block>
            <fo:block id="c41b2c11b5b7">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Package
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  This item expands to show the package to which the file belongs.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:block color="red">&lt;screenshot&gt;<fo:block>
                        <fo:external-graphic src="file:images/speedbar3.gif" width="auto" height="auto"/>
                     </fo:block>&lt;/screenshot&gt;</fo:block>
	
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  Clicking on the package scrolls the buffer to the corresponding package declaration.
	</fo:block>
            </fo:block>
            <fo:block id="c41b2c11b5b8">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Types
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  This item expands to show the classes in the selected file.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:block color="red">&lt;screenshot&gt;<fo:block>
                        <fo:external-graphic src="file:images/speedbar4.gif" width="auto" height="auto"/>
                     </fo:block>&lt;/screenshot&gt;</fo:block>
	
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  Each class expands to show the constructors, methods, fields,
	  and inner classes defined by the class and the class's parent,
	  if any. Inner classes also expand and their inner classes, 
	  and so on. The constructors and methods expand to show arguments 
	  and argument types and return types. Fields expand to show
	  their type.
	</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	  Clicking on any class, inner class, method, constructor, or field 
	  scrolls the buffer to show that item.
	</fo:block>
            </fo:block>
            <fo:block id="c41b2c11b5b9">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Dependencies
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:block color="red">&lt;screenshot&gt;<fo:block>
                        <fo:external-graphic src="file:images/speedbar5.gif" width="auto" height="auto"/>
                     </fo:block>&lt;/screenshot&gt;</fo:block>
	
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Click on class or package to scroll the buffer to the corresponding import statement.</fo:block>
            </fo:block>
            <fo:block id="c41b2c11b5c10">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Updating the Speedbar</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you make changes to a source buffer, you must update
	  the speedbar view to reflect the changes. To update the
	  speedbar view of a buffer:</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                     <fo:list-item>
                        <fo:list-item-label>
                           <fo:block>1.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	    Collapse the speedbar view of the buffer.
	    </fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	      This is necessary only if the speedbar view is expanded. To collapse the speedbar view, 
	      click the collapse button (-) next to the buffer's file name in the speedbar view.
	    </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                     <fo:list-item>
                        <fo:list-item-label>
                           <fo:block>2.</fo:block>
                        </fo:list-item-label>
                        <fo:list-item-body>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Hold the shift key down while clicking the
	      expand button (+) next to the buffer's name  in the
	      speedbar view.  </fo:block>
                        </fo:list-item-body>
                     </fo:list-item>
                  </fo:list-block>
               </fo:block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2c11b6">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Tags
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To use the <fo:block color="red">&lt;varname&gt;etags&lt;/varname&gt;</fo:block> facility, you must
	first construct a  TAGS file that indexes every symbol in your
	source code. The JDE  package contains two shell scripts that
	you can use to tag your  source code, one for
	<fo:inline font-weight="bold">csh</fo:inline> shells and the other for
	<fo:inline font-weight="bold">bash</fo:inline>.  The <fo:inline font-weight="bold">bash</fo:inline> version
	is called <fo:inline font-weight="bold">jtags</fo:inline>; the <fo:inline font-weight="bold">csh</fo:inline>
	version, <fo:inline font-weight="bold">jtags.csh</fo:inline>. </fo:block>
            <fo:block id="c41b2c11b6b2">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Tagging Java Source Code</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To tag your source code, first copy the appropriate shell
	  script to a directory in your Emacs path. Then start a shell (M-x 
	  shell). Change to the top-level directory containing your
	  source code and then enter <fo:inline font-weight="bold">jtags</fo:inline>. The <fo:inline font-weight="bold">jtags</fo:inline>
	  script tags every <fo:inline font-family="monospace">.java</fo:inline> file in the current directory
	  and in all descendants of the current directory, storing the
	  result in a file called <fo:inline font-family="monospace">TAGS</fo:inline> in the top-level directory.
	</fo:block>
            </fo:block>
            <fo:block id="c41b2c11b6b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Finding the Definition of a Symbol</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To find the definition of a symbol, put your cursor anywhere
	  in the symbol and enter
	  M-.. Emacs
	  responds by locating
	  and opening (if necessary) the file containing the definition and
	  positioning the point at the definition. (The first time you type
	  M-., Emacs
	  prompts you to load the <fo:inline font-family="monospace">TAGS</fo:inline> file.) </fo:block>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2c12">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">12. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Customizing the JDE</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
      This section describes various ways you can customize the JDE.
    </fo:block>
         <fo:block id="c41b2c12b2">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Customization Variables</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	JDE customization variables allow you to specify compile, run, debug,
	and other JDE options. </fo:block>
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
               <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"> The traditional way of customizing Emacs is to use
	  <fo:block color="red">&lt;varname&gt;setq&lt;/varname&gt;</fo:block> forms to set the values of customization
	  variables in the Emacs initialization (<fo:inline font-family="monospace">.emacs</fo:inline>)
	  file. This method does <fo:inline font-style="italic">not</fo:inline> work for JDE
	  customization variables. To set a JDE customization variable, you
	  <fo:inline font-style="italic">must</fo:inline> use  the customization buffer for a variable
	  (see the Emacs online manual for information on the  customization
	  feature). This is because the JDE context switching code resets all
	  JDE customization variables to their default or customized (via a
	  custom buffer) values whenever you open a Java source file or switch
	  projects.
	</fo:block>
            </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  The following section explains  how to use the Emacs
	customization  feature to set the value of a JDE customization
	variable.</fo:block>
         </fo:block>
         <fo:block id="c41b2c12b3">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Setting a Variable</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
	To set a JDE customization variable:
      </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Determine the name of the variable you want to customize.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  Refer to the section of this guide that documents the feature
	    you want to customize for the name of the corresponding variable.  Or
	    type C-h 
	    v followed by the JDE group prefix
	    (<fo:block color="red">&lt;varname&gt;jde-&lt;/varname&gt;</fo:block>) or subgroup prefix (e.g., 
	    <fo:block color="red">&lt;varname&gt;jde-compile-option-&lt;/varname&gt;</fo:block>, see <fo:simple-link external-destination="#JDECustomizationGroups">  JDE Customization Groups</fo:simple-link> [#JDECustomizationGroups]). Emacs
	    displays all  variables belonging to the JDE group or subgroup. You 
	    can then browse this list, using Emacs search, completion,  and
	    documentation display command, to find the applicable  variable.
	  </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Display a customization buffer for the variable. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  If you know the name of the variable, the easiest way to
	    display a   customization buffer for the variable is to select 
	    Help-&gt;Customize-&gt;Specific Option... from the
	    Emacs  menubar or type M-x <fo:block color="red">&lt;varname&gt;customize-variable&lt;/varname&gt;</fo:block>.
	    If you know the  group to which the variable belongs (.e.g., compile
	    options), you  can display the customization buffer for the group. This
	    is useful when  you want to customize several related variables. See 
	    <fo:simple-link external-destination="#JDECustomizationGroups">JDE Customization Groups</fo:simple-link> [#JDECustomizationGroups] for 
	    more information. 
	  </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>3.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Edit the value for the variable displayed in the customization
	    buffer. </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>4.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Save the value for the variable in your <fo:inline font-family="monospace">.emacs</fo:inline> or <fo:inline font-family="monospace">.prj</fo:inline> file. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  If you want the setting to apply to all projects that do not
	    have a project file  (see <fo:simple-link external-destination="#UsingProjectFiles">Using Project
	      Files</fo:simple-link> [#UsingProjectFiles]), you should save the variable in your 
	    <fo:inline font-family="monospace">.emacs</fo:inline> file. To save the variable in your
	    <fo:inline font-family="monospace">.emacs</fo:inline> file, select  Save
		for Future Sessions from the
	    State menu for the
	    variable in the customization buffer.
	  </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  If you want the setting to apply only to a particular project,
	    you should save  the setting in the <fo:inline font-family="monospace">.prj</fo:inline> file for
	    that project. To do this, open a source  file from that project, select
	    Set for Current Session from the State menu for the variable, select the source buffer, and
	    select  JDE-&gt;Project-&gt;Project Files-&gt;Save
	    (C-c C-v C-p) from the   Emacs menubar.
	  </fo:block>
                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" start-indent="0.25in" end-indent="0.25in">
                           <fo:block font-size="14pt" font-weight="bold" keep-with-next="true">Note</fo:block>
                           <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">  If a project file does exist for the
	      project, the JDE will prompt  you to enter a name for the project. It
	      then creates a project file for the project with  the name that you
	      enter.    
	    </fo:block>
                        </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
         </fo:block>
         <fo:block id="c41b2c12b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> JDE Customization Groups</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE defines a top-level customization group, the JDE Group,
	for JDE customization variables. The JDE Group itself contains
	the following subgroups:</fo:block>
            <fo:block id="c41b2c12b4b2">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Compile Option Group</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specifies compile options corresponding to the command-line
	  arguments (e.g., -d) accepted by the JDK compiler, javac. When  you
	  execute the JDE compile command, the JDE uses the settings of  this
	  group to construct a list of command-line arguments that it  passes to
	  the Java compiler that the JDE uses to compile Java  source programs.
	  The compiler is itself an option that you can  specify (see the Project
	  Option Group). You can specify command-line  arguments directly by
	  setting the value of the
	  <fo:block color="red">&lt;varname&gt;jde-compile-option-command-line-args&lt;/varname&gt;</fo:block>  variable. You
	  can display the customization buffer for the  Compile Option Group by
	  selecting JDE-&gt;
	      Project-&gt;Options-&gt;Compile
	  from  the Emacs menubar. </fo:block>
            </fo:block>
            <fo:block id="c41b2c12b4b3">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Run Option Group
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specifies run-time options corresponding to the command-line
	  arguments (for example, -classpath) accepted by the JDK virtual
	  machine, java. When you execute the JDE Run command,  the
	  JDE uses the settings of this group to construct a list of
	  command-line arguments that it passes to the Java interpreter
	  used by the JDE to run applications. This group also contains
	  options for specifying non-java command-line arguments (in case
	  you want to use a VM that accepts a different set of arguments
	  than java does) and for specifying arguments to be passed to the
	  application (as opposed to the virtual machine interpreting the
	  application.) You can display the customization buffer for the
	  Run Option Group by selecting JDE-&gt;Project-&gt;Options-&gt;Run
	  from  the Emacs menubar. </fo:block>
            </fo:block>
            <fo:block id="c41b2c12b4b4">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Debug Option Group</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specifies run-time options corresponding to the command-line
	  arguments (for example, -classpath) accepted by the JDK debugger,
	  jdb. jdb accepts the same command-line arguments as java. However,
	  the JDE maintains two parallel sets of configuration variables
	  for these programs in case you want to use a different set of
	  options for running a program in debug mode then you use for
	  running it normally. When you execute the JDE Debug command,
	  the JDE uses the settings of this group to construct a list of
	  command-line arguments that it passes to the Java debugger used
	  by the JDE to run applications in debug mode. You can display the
	  customization buffer for the Debug Option Group by selecting 
	  JDE-&gt;Project-&gt;Options-&gt;Debug
	  from  the Emacs menubar. </fo:block>
            </fo:block>
            <fo:block id="c41b2c12b4b5">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em"> 
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block>Autocode Group
               </fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specifies templates used to generate code automatically. </fo:block>
            </fo:block>
            <fo:block id="c41b2c12b4b6">
               <fo:block font-size="14pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
                  <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> General Options Group</fo:block>
               <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Specify all other JDE options. You can display the
	  customization buffer for the General Option Group by selecting 
	  JDE-&gt;Project-&gt;Options-&gt;General
	  from  the Emacs menubar. </fo:block>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
   <fo:page-sequence master-name="pages" id="c41b2c13">
      <fo:static-content flow-name="xsl-region-after">
         <fo:block text-align-last="center" font-size="10pt">
            <fo:page-number/>
         </fo:block>
      </fo:static-content>
      <fo:flow>
         <fo:block font-size="18pt" font-weight="bold">13. <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Customizing jde-mode</fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JDE defines a major mode, named jde-mode, for editing Java
      source files. This mode derives from the standard Emacs Java
      source editing mode java-mode. In particular, it inherits all the
      functions and customization variables defined by java-mode and
      adds its own customization variables. When you load a Java source
      file, Emacs runs a JDE mode initialization function called jde-mode.
      The jde-mode function in turn calls the Java mode intialization
      function, java-mode. The last thing that jde-mode does before
      returning is to call a JDE mode function, if it exists. You can
      customize the JDE by defining a JDE mode hook function in your .emacs
      file. The following is an example of how to do this: </fo:block>
         <fo:block wrap-option="no-wrap" text-align="start" white-space="pre" font-family="monospace" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em">
      (defun my-jde-mode-hook ()
      (message "my-jde-mode-hook function executed"))
       (add-hook 'jde-mode-hook 'my-jde-mode-hook)
       </fo:block>
         <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The preceding example defines a JDE mode hook function named
      my-jde-mode-hook and adds it to the list of JDE mode hook
      functions, using the Emacs Lisp function add-hook. Now, whenever
      you open a Java source file, jde-mode invokes the function my-jde-mode-hook.
      Of course, the hook function defined in this example is trivial.
      A real-world example might do something more useful, such as
      setting a custom indentation style. </fo:block>
         <fo:block id="c41b2c13b4">
            <fo:block font-size="16pt" font-weight="bold" space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em">
               <fo:block color="red">&lt;anchor&gt;&lt;/anchor&gt;</fo:block> Customizing Key Bindings</fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A key binding establishes an equivalence between a keystroke
	or a sequence of keystrokes and an interactive Lisp function. The
	keystroke or keystroke combination causes Emacs to execute the
	function to which the keystroke (combination) is bound. For
	example, the JDE by default binds the keystroke  C-c C-v C-c
	to the function <fo:block color="red">&lt;varname&gt;jde-compile&lt;/varname&gt;</fo:block>. You can use the JDE
	customization facility to change the standard JDE bindings or
	create bindings for functions that do not have default bindings. </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To customize key bindings: </fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
               <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>1.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Open a buffer on the JDE customization variable <fo:block color="red">&lt;varname&gt;jde-key-bindings&lt;/varname&gt;</fo:block>.</fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">You can do this by typing
	    M-x <fo:block color="red">&lt;varname&gt;customize-variable&lt;/varname&gt;</fo:block> 
	    <fo:block color="red">&lt;varname&gt;jde-key-bindings&lt;/varname&gt;</fo:block> or by selecting JDE-&gt;Options-&gt;Project  and searching the
	    resulting JDE project customization  buffer for
	    <fo:block color="red">&lt;varname&gt;jde-key-bindings&lt;/varname&gt;</fo:block>. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The key bindings panel looks like this: </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                           <fo:block color="red">&lt;screenshot&gt;<fo:block>
                                 <fo:external-graphic src="file:images/KeyBindings.gif" width="auto" height="auto"/>
                              </fo:block>&lt;/screenshot&gt;</fo:block>
	  
                        </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>2.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Edit the buffer to specify altered or new bindings. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For example, to add a binding, right click the
	    [INS] button, then enter the key  stroke in the
	    Key field and  the interactive function (command)
	    to which it is bound  in the Command field.</fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
                  <fo:list-item>
                     <fo:list-item-label>
                        <fo:block>3.</fo:block>
                     </fo:list-item-label>
                     <fo:list-item-body>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Save the edited bindings. </fo:block>
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To save the edited bindings, right click the
	    [State] button and choose Set for current session if you
	    want the settings to apply only to the current project or
	    Save for future
		sessionsif  you want the settings to apply
	    to all projects. In either  case, you should save the new settings in
	    you project  file if your project has a project file. To save the new
	    settings in your project file, switch to a source buffer  and choose
	    JDE-&gt; Options-&gt;Save Project  from the Emacs menubar. 
	  </fo:block>
                     </fo:list-item-body>
                  </fo:list-item>
               </fo:list-block>
            </fo:block>
         </fo:block>
      </fo:flow>
   </fo:page-sequence>
</fo:root>