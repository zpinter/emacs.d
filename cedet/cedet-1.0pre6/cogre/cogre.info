This is cogre.info, produced by makeinfo version 4.9 from cogre.texi.

START-INFO-DIR-ENTRY
* cogre: (cogre).       Graphs & UML for Emacs
END-INFO-DIR-ENTRY


File: cogre.info,  Node: Top,  Next: Getting Started,  Up: (dir)

COGRE: COnnected GRaph Editor
*****************************

COGRE is a package that enables Emacs to display connected graph
diagrams in a text buffer.  The main goal is to provide UML class
diagrams, but any kind of graph can be supported through object
inheritance via EIEIO *Note (eieio)Top::.

   Warning: Very little in this manual has been written.

* Menu:

* Getting Started::       Graphs, Nodes, and Links
* Class Diagrams::        Creating Class diagrams
* Semantic Support::      Emacs can make diagrams for you
* Index::


File: cogre.info,  Node: Getting Started,  Next: Class Diagrams,  Prev: Top,  Up: Top

1 Getting Started
*****************

There are three basic parts to any COGRE interface.

  1. Graph The graph consists of a buffer, and all child elements in
     that graph.  The graph is treated as any other Emacs buffer.  When
     that buffer is selected, Graph editing commands are available.

  2. Node A Node consists of a square region of screen space, and
     usually a name.  Nodes can be anything, but common examples are
     Classes, Packages, or other "object like" things.

  3. Link A Link is a line that connects two nodes.  A link may not
     exist without a node at both ends.  When a node is deleted, all
     links connected to it in some way are also deleted.

   The first step to using COGRE is to create a new graph.  Once you
have a graph, you can create nodes and links.

   You can create a new graph with the `cogre' command.

 -- Command: cogre name &optional graph-class
     Create a new graph with the Connected Graph Editor.  The new graph
     will be given NAME.  See "cogre-mode" for details.  Optional
     argument GRAPH-CLASS indicates the type of graph to create.

* Menu:

* Creating Nodes and Links ::   Create new nodes and links
* Moving Nodes ::               Move nodes around
* Customizing Nodes ::          Customize details about a node


File: cogre.info,  Node: Creating Nodes and Links,  Next: Moving Nodes,  Up: Getting Started

1.1 Creating Nodes and Links
============================

Nodes are created with the command `cogre-new-node', which is bound to
`N' in the graph.  New links can be created with the command
`cogre-new-link'.  You can also access these functions via menus.

 -- Command: cogre-new-node point nodetype
     Insert a new node at the current point.  Argument POINT is a
     position to insert this node to.  NODETYPE is the eieio class name
     for the node to insert.

 -- Command: cogre-new-link mark point &optional linktype
     Insert a new link from the node at MARK to POINT of LINKTYPE.
     MARK is the node within which the current mark is set.  POINT is
     the node the cursor is in.  LINKTYPE is the eieio class name for
     the link to insert.

   To configure the default type of node to insert, such as a UML class
node, use `cogre-default-node'.  Likewise, use `cogre-default-link'.
These are bound to `C-c C-n', and `C-c C-l' respectively.

 -- Command: cogre-default-node &optional node prefix
     Return the default node type.  If run interactively, query for a
     new node to make the default.  If called non-interactivly there is
     no default, query for one.  If NODE is supplied, use that.  If
     there is a PREFIX argument, then force a query for one.

 -- Command: cogre-default-link &optional link prefix
     Return the default link type.  If run interactively, query for a
     new link to make the default.  If called non-interactivly there is
     no default, query for one.  If LINK is supplied, use that.  If
     there is a PREFIX argument, then force a query for one.


File: cogre.info,  Node: Moving Nodes,  Next: Customizing Nodes,  Prev: Creating Nodes and Links,  Up: Getting Started

1.2 Moving Nodes
================

Moving nodes around is also how to move links around.  As a node moves,
the links will re-route.  Movement is done with meta key bindings.

   There are also keys to help move the cursor around between nodes.

`M-b'
`meta left'
     Move a node left one character

`M-f'
`meta right'
     Move a node right one character

`M-n'
`meta down'
     Move a node down one character

`M-p'
`meta up'
     Move a node up one character

`TAB'
     Move point to the next node

`M-TAB'
     Move point to the previous node


File: cogre.info,  Node: Customizing Nodes,  Prev: Moving Nodes,  Up: Getting Started

1.3 Customizing Nodes
=====================

Nodes and links are EIEIO objects, and can be customized.  Press `RET'
on a node or link to customize the slots of that object.


File: cogre.info,  Node: Class Diagrams,  Next: Semantic Support,  Prev: Getting Started,  Up: Top

2 Class Diagrams
****************

Add text here


File: cogre.info,  Node: Semantic Support,  Next: Index,  Prev: Class Diagrams,  Up: Top

3 Semantic Support
******************

Add text here


File: cogre.info,  Node: Index,  Prev: Semantic Support,  Up: Top

4 Index
*******



Tag Table:
Node: Top159
Node: Getting Started763
Ref: cogre1757
Node: Creating Nodes and Links2143
Ref: cogre-new-node2540
Ref: cogre-new-link2766
Ref: cogre-default-node3253
Ref: cogre-default-link3579
Node: Moving Nodes3851
Node: Customizing Nodes4522
Node: Class Diagrams4785
Node: Semantic Support4937
Node: Index5083

End Tag Table
