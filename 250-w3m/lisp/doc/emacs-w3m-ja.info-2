Info file: emacs-w3m-ja.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `emacs-w3m-ja.texi'
using `texinfmt.el' version 2.42 of  7 Jul 2006.

INFO-DIR-SECTION GNU Emacs Lisp
START-INFO-DIR-ENTRY
* Emacs-w3m-ja: (emacs-w3m-ja).  An Emacs interface to w3m (Japanese)
END-INFO-DIR-ENTRY


This file documents emacs-w3m, an Emacs interface to w3m.

このファイルは Emacs で動く w3m のインタフェースである emacs-w3m に関す
る説明書です。

Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005
TSUCHIYA Masatoshi

This edition is for emacs-w3m version 1.4.4.

この版は emacs-w3m バージョン 1.4.4 に対応します。

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License, Version 2 or any
later version published by the Free Software Foundation.

この文書を、フリーソフトウェア財団発行の GNU 一般公用使用許諾書第 2 版
またはそれ以降の版が定める条件の下で複製、配布、あるいは変更することを
許可します。

This document is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

この文書は有用とは思いますが, 頒布にあたっては, 市場性及び特定目的適合
性についての暗黙の保証を含めて, いかなる保証も行ないません. 詳細につい
ては GNU 一般公有使用許諾書をお読みください.

You should have received a copy of the GNU General Public License
along with this document; if not, you can either send email to this
document's maintainer or write to: The Free Software Foundation, Inc.;
59 Temple Place, Suite 330; Boston, MA 02111-1307, USA.

あなたは, この文書と一緒に GNU 一般公有使用許諾の写しを受け取っているは
ずです. そうでない場合は, 文書の管理者にメールを送るか、または、フリー
ソフトウェア財団 (675 Mass Ave, Cambridge, MA 02139, USA) に手紙を書い
てください。





File: emacs-w3m-ja.info, Node: Grouping URLs, Next: Weather Information, Prev: Using Search Engines, Up: Pretty Good Features

一つの URL で複数のウェブページを見る
=====================================

Emacs-w3m は "group URLs" という、複数の実際の URL を一つにまとめた特別
な URL を扱うことができます。そのようなグループ URL を開くと、
emacs-w3m は一度に複数のページを開くために、そのグループに含まれるそれ
ぞれの URL に対して一つのバッファを開きます。

グループ URL を作るには、開きたいすべてのページのアドレスを単にアンパサ
ンド記号 ("&") で一緒にして (すなわち結合して)、グループ URL を表す接頭
辞の "group:" を付ければ良いのです。例を挙げると、GNU プロジェクトのホー
ムページ `http://www.gnu.org/' と Savannah ホームページ
`http://savannah.nongnu.org/' を見たいものとすれば、グループ URL は次の
ようなものになるでしょう。

`group:http://www.gnu.org/&http://savannah.nongnu.org/'

この構文を日常的に使うのはかなり辛いものがありますが、非常に短い URL
(例えばクイックサーチ URL、*Note Quick Searching:: を参照) や非対話型で
使う状況では、この機能はおおいに役立つでしょう。



File: emacs-w3m-ja.info, Node: Weather Information, Next: Using Antenna, Prev: Grouping URLs, Up: Pretty Good Features

明日の天気は晴れでしょう
========================




File: emacs-w3m-ja.info, Node: Using Antenna, Next: Showing Directory Tree, Prev: Weather Information, Up: Pretty Good Features

アンテナを張り巡らそう
======================

アンテナはウェブページの変化を追跡するための道具です。アンテナを使うと、
特定のページが、以前に見たときから更新されたかされなかったかを、周期的
にチェックすることができます。

いずれかの emacs-w3m バッファで `A' を使うことによって、アンテナを始め
ることができます。あるいは、特別の URL `about://antenna/' に行くことに
よっても同じことができます。

* Menu:

* Setting up Antenna::          ウェブサイトをアンテナに加えるには?
* Daily web tracking::          アンテナで変化を追跡する



File: emacs-w3m-ja.info, Node: Setting up Antenna, Next: Daily web tracking, Prev: Using Antenna, Up: Using Antenna

ウェブサイトをアンテナに加えるには?
-----------------------------------

現に表示中のウェブページをアンテナに加えるには、単純に `+' キーを押して
ください。全てのフィールドがすでに書きこまれている `w3m-antenna-sites'
をカスタマイズするためのバッファが現れるでしょう。あなたは単に "Save
for future sessions" と "Finish" のボタンを押せば良いのです。

`+'
     URL をアンテナ・データベースに加えます。接頭引数付きで呼ばれた場合
     は、現在のページを追加するのではなくて、加える URL を尋ねます
     (`w3m-antenna-add-current-url')。



File: emacs-w3m-ja.info, Node: Daily web tracking, Prev: Setting up Antenna, Up: Using Antenna

アンテナで変化を追跡する
------------------------

アンテナ・ページには二つの項目が現れます。一つは "Updated" と呼ばれ、も
う一つは "Visited" と呼ばれます。"Updated" の項目では最後にアンテナを更
新した後で変化したウェブサイトが、そして "Visited" の項目では変化しなかっ
たウェブサイトが見つかります。それぞれの項目で、各行はアンテナ・データ
ベースの一つのウェブサイトを表し、以下の構造になっています:

`  * 2002/12/15 16:43  (T)  My website'

最初の部分は、アンテナが最後にそのページの変化を報告した、そのウェブサ
イトが更新された最終時刻です。またはその情報が得られないこともあります。

`(T)' は "Time" を表し、最後にアンテナを更新した後で、そのページの変更
時刻が変化したので、変化が検出されたことを意味します。もう一つの可能性
がある値は `S' ("Size" のこと) で、そのページのサイズが変化したので、変
化が検出されたことを意味します。

行の最後の部分は、データベースに追加したときに与えた、このウェブサイト
のタイトルです。

どうか、アンテナ・データベースは自動的に更新されないことに注意して下さ
い。アンテナ・ページで `R' を叩くか、または接頭引数をコマンドに渡す (例
えば `C-u A' でアンテナを始める) ことによって、サイトが変化したかどうか
をチェックしたい毎に、それを更新しなければなりません。

`A'
     アンテナのページに行きます。接頭引数付きで呼ばれた場合は、表示する
     前にアンテナ・データベースを更新します (`w3m-antenna')。



File: emacs-w3m-ja.info, Node: Showing Directory Tree, Next: Viewing Perl Documents, Prev: Using Antenna, Up: Pretty Good Features

ディレクトリの木構造を表示する
==============================

`w3m-dtree' コマンドを使うと、ローカルディレクトリのすべてのサブディレ
クトリの木構造を表示して、普通のウェブページのように閲覧することができ
ます。この機能を使ったときに現れる emacs-w3m のバッファは、その名前ゆえ
に外部の "tree" プログラムの出力に非常に類似したものになります。さらに
emacs-w3m からのボーナス: このコマンドを接頭引数付きで呼ぶとファイルも
表示し、emacs-w3m は完全装備のファイル閲覧器に変身します。

Emacs-w3m dtree がどんなふうに動作するかの例です:

     /home/romain/.elisp/emacs-w3m/
      |-CVS/
      |-attic/
      |  +-CVS/
      |-autom4te.cache/
      |-doc/
      |  |-CVS/
      |  +-emacs-w3m/
      |-icons/
      |  +-CVS/
      |-patches/
      |  +-CVS/
      +-shimbun/
         +-CVS/

接頭引数を付けると、代わりにこんなふうになります:

     /home/romain/.elisp/emacs-w3m/ (allfiles)
      |-(f).cvsignore
      |-(f)BUGS.ja
      |-(f)COPYING
      |-[d]CVS/
      |  |-(f)Entries
      |  |-(f)Repository
      |  +-(f)Root
      |-(f)ChangeLog
      |-(f)ChangeLog.1
      |-(f)Makefile
      |-(f)Makefile.in
      |-(f)README
      |-(f)README.ja

`D'
     ミニバッファでローカルディレクトリの入力を求め、その木構造を表示し
     ます。接頭引数付きで呼ばれると (例: `C-u D')、そのディレクトリにあ
     るファイルも表示します (`w3m-dtree')。



File: emacs-w3m-ja.info, Node: Viewing Perl Documents, Next: Using Namazu, Prev: Showing Directory Tree, Up: Pretty Good Features

Perl のドキュメントを見る
=========================




File: emacs-w3m-ja.info, Node: Using Namazu, Next: Octet, Prev: Viewing Perl Documents, Up: Pretty Good Features

Namazu でファイルを検索する
===========================

emacs-w3m は、全文検索ソフト Namazu を使ってファイルを検索することもで
きます (`w3m-namazu')。この機能を使うためには、Namazu を以下の場所から
取得して、インストールしておく必要があります:

`http://namazu.org/'

Namazu を使うためには、実際に検索を行う前に、検索対象となるファイルに含
まれている単語の索引 (インデックス) を作成しておく必要があります。もっ
とも典型的なコマンドは以下の通りです。

     % mknmz -O <インデックスを置くディレクトリ> <ドキュメントのあるディレクトリ>

`w3m-namazu' を動かす前に、いくつかの変数を設定しておく必要があります。
以下の変数を、使っている環境にあわせて設定して下さい。

`w3m-namazu-index-alist'
     インデックスの保存されているディレクトリの連想配列を設定します。
     `w3m-namazu' では、インデックスの保存されているディレクトリに対し
     て、ディレクトリ名よりも分かりやすい別名を定義することができます。
     また、幾つかの別々のインデックスを、あたかも単一のインデックスであ
     るかのように扱うこともできます。そのためには、次のように別名をキー
     とし、インデックスの保存されているディレクトリ (のリスト) を値とす
     る連想配列を `w3m-namazu-index-alist' に設定します。

          (setq w3m-namazu-index-alist
                '(("alias1" "Path/to/the/index/directory1")
                  ("alias2" "Path/to/the/index/dir2"
                            "Path/to/the/index/dir3")))

`w3m-namazu-default-index'
     検索対象とするインデックスを指定します。実際にインデックスが保存さ
     れているディレクトリや、`w3m-namazu-index-alist' を設定するときに
     使った別名が使えます。値が `nil' の場合は、`M-x w3m-namazu RET' と
     実行するたびに、検索対象とするインデックスを問い合わせます。

これで準備が整いましたから、`M-x w3m-namazu RET query RET' とすると、文
字列 query を検索することができます。デフォルト以外のインデックスを対象
として検索を行う場合は、`C-u M-x w3m-namazu' というように前置引数を指定
して実行します。



File: emacs-w3m-ja.info, Node: Octet, Prev: Using Namazu, Up: Pretty Good Features

application/octet-stream データを見る
=====================================

(作成中)

以下の設定を `~/.emacs' に書いておくと、`octet-find-file' でファイルを
開いたときに便利かも知れません。

     (add-hook 'octet-find-file-hook 'view-mode)
     (add-hook 'octet-find-file-hook 'w3m-minor-mode)




File: emacs-w3m-ja.info, Node: Customizable Variables, Next: Hooking into MUAs, Prev: Pretty Good Features, Up: Top

デフォルトのままでも結構良いと思うけれど
****************************************

たくさんの emacs-w3m の変数が、Custom の仕掛けによってカスタマイズする
ことができます。Custom は変数を定義するための、Emacs のグラフィック・イ
ンターフェースです。Custom にはいくつかのカスタマイズのための手段があり、
例えば単一のオプション (すなわち、Emacs Lisp 変数) のための `M-x
customize-option'、またはある "group" (この場合のグループは `w3m') に属
するすべてのオプション (変数とフェース) を見て、かつ変更するための
`M-x customize-group' が使えます。

あるいは (もし Custom を使いたくないのであれば)、任意の Emacs Lisp 式を
emacs-w3m 初期設定ファイルに書き込むことができます。デフォルトのファイ
ルは `~/.emacs-w3m' です。例えば、

     (setq w3m-home-page "http://emacs-w3m.namazu.org/")

これはデフォルトのホームページを `http://emacs-w3m.namazu.org/' に設定
します。シンタックスは `.emacs' ファイルと同じです (*Note Init File:
(emacs)Init File.)。

気を付けなければいけないのは、外部モジュールで定義されているいくつかの
変数が `~/.emacs-w3m' ファイルが読み込まれるときには未定義で、それらを
変更できないかもしれないことです (もちろん、デフォルトの値を気にしない
のであれば、`~/.emacs-w3m' ファイルで完璧に上書きしてしまうことは可能な
のですけれどね)。変数 `w3m-search-engine-alist' は典型的な例です
(*Note Search Variables::)。

`w3m-init-file'
     Emacs-w3m が起動すると、`w3m-init-file' ファイルを読み込みます。デ
     フォルト値は `~/.emacs-w3m' です。たぶん、あなたはこれを変更する必
     要は無いでしょう。これは普通の Emacs Lisp ファイルで、`~/.emacs'
     や `site-init' ファイルを emacs-w3m 関係のもので乱雑にしないように
     するために使うことができます。Emacs-w3m はこれと同じ名前に、拡張子
     `.elc' と `.el' が付いているものも (言い換えれば、
     `~/.emacs-w3m.elc'、`~/.emacs-w3m.el' および `~/.emacs-w3m' の順に)
     調べます。

* Menu:

* General Variables::           一般的な変数
* Image Variables::             画像に関連した変数
* Form Variables::              フォームに関連した変数
* Cookie Variables::            クッキーに関連した変数
* Bookmark Variables::          ブックマークに関連した変数
* Search Variables::            ウェブ検索に関連した変数
* Weather Variables::           天気予報に関連した変数
* Dtree Variables::             dtree に関連した変数
* Antenna Variables::           アンテナに関連した変数
* Perldoc Variables::           Perldoc に関連した変数
* Namazu Variables::            Namazu に関連した変数
* Octet Variables::             Octet に関連した変数
* Hooks::                       フック
* Other Variables::             その他の変数



File: emacs-w3m-ja.info, Node: General Variables, Next: Image Variables, Prev: Customizable Variables, Up: Customizable Variables

一般的な変数
============

`w3m-accept-languages'
     List of acceptable languages in descending order of priority.
     The default value is set according to the `accept_language' entry
     of the `w3m' configuration file (normally `~/.w3m/config').

`w3m-add-referer'

     Rule of sending referers.  There are five choices as the valid
     values of this option.

       1. `nil': this means that emacs-w3m never send referers.

       2. `t': this means that emacs-w3m always send referers.

       3. `lambda': this means that emacs-w3m send referers only when
          both the current page and the target page are provided by
          the same server.

       4. a cons cell keeping two regular expressions: this means that
          emacs-w3m send referers when the url of the current page
          matches the first regular expression and does not match the
          second regular expression.  `Nil' for the regexp matches any
          url.

       5. a function: emacs-w3m send referers when this function which
          has two arguments, URL and REFERER, returns non-nil.

     If you're nervous about leaking private WEB browsing history
     information, set this option to `nil' or `lambda'.  If your
     computer belongs to a secret network, you may set a pair of
     regular expressions to inhibit sending referers which will
     disclose your private information, as follows:

          (setq w3m-add-referer
                '("\\`http:\"
                  . "\\`http://\\([^./]+\\.\\)*example\\.net/"))

`w3m-add-user-agent'
     Non-`nil' means add the User-Agent field to the request header.
     The value of `w3m-user-agent' is used for the field body.

`w3m-arrived-file'
     Name of the file to keep the arrived URLs database.

`w3m-auto-show'
     Non-`nil' means provide the ability to horizontally scroll the
     window.  Automatic horizontal scrolling happens when the point gets away
     from both ends of the window, but nothing occurs if
     `truncate-lines' is set to `nil'.

     This feature works with specific emacs-w3m code; usual
     `auto-hscroll-mode', `automatic-hscrolling', `auto-show-mode' or
     `hscroll-mode' will all be invalidated in emacs-w3m buffers.

`w3m-charset-coding-system-alist'
     Alist of MIME charsets and coding systems.  Both charsets and
     coding systems must be symbols.

`w3m-coding-system'
     Default coding system used to communicate with the `w3m' command.

`w3m-coding-system-priority-list'
     Coding systems in order of priority used for emacs-w3m sessions.

`w3m-command'
     Name of the executable file of the `w3m' command.  You normally
     don't have to specify the value, since emacs-w3m looks for the
     existing commands `w3m', `w3mmee' and `w3m-m17n' (in this order)
     in the `exec-path' directories in order if it is `nil' in the
     beginning.

     If you want to use the other `w3m' command, specify the value of
     this variable explicitly in the .emacs file or customize the
     value and save it.  In this case, you need to restart Emacs and
     emacs-w3m: there is currently no way to apply the changing of the
     `w3m' command to all the emacs-w3m programs safely after loading
     the `w3m.elc' module.

`w3m-command-arguments'
     List of the default arguments passed to the `w3m' command.  See
     also `w3m-command-arguments-alist'.

`w3m-command-arguments-alist'
     Alist of regexps matching urls and additional arguments passed to
     `w3m'.  A typical usage of this variable is to specify whether to
     use a proxy server for particular hosts.  The first match made
     will be used.  Here is an example of how to set this variable:

          (setq w3m-command-arguments-alist
                '(;; Don't use the proxy server to visit local web pages.
                  ("^http://\\([^/]*\\.\\)*your-company\\.com\\(/\\|$\\)"
                   "-no-proxy")
                  ;; Use the proxy server to visit any foreign urls.
                  (""
                   "-o" "http_proxy=http://proxy.your-company.com:8080/")))

     Here the first element matches any url where the scheme is `http'
     and the hostname is either `your-company.com' or a name ending
     with `.your-company.com'; the proxy server is not used for those
     hosts.  If you are a regexp novice, you can use the
     `w3m-no-proxy-domains' variable instead.

`w3m-command-environment'
     Alist of environment variables for subprocesses to inherit.

`w3m-content-type-alist'
     Alist of file suffixes and content types.

`w3m-correct-charset-alist'
     Alist of MIME charsets; strange ones and standard ones.

`w3m-db-history-display-size'
     Maximum number of arrived URLs which are displayed per page.

`w3m-decoder-alist'
     Alist of encoding types, decoder commands, and arguments.

`w3m-default-coding-system'
     Default coding system used to encode url strings and post-data.

`w3m-default-content-type'
     Default value assumed as the content type of local files.

`w3m-default-save-directory'
     Default directory where downloaded files will be saved to.

`w3m-delete-duplicated-empty-lines'
     Non-`nil' means display two or more continuous empty lines into
     single.

`w3m-dirlist-cgi-program'
     Name of the CGI program to list a local directory.  If it is
     `nil', the dirlist.cgi module of the `w3m' command will be used.

`w3m-edit-function'
     Function used for editing local files.  It is used when the
     `w3m-edit-current-url' command or the `w3m-edit-this-url' command
     is invoked.

`w3m-edit-function-alist'
     Alist of functions used for editing pages.  This option is refered to
     decide which function shouled be used to edit a specified page, when
     either `w3m-edit-current-url' or `w3m-edit-this-url' is
     invoked.  When no suitable function is found from this alist,
     `w3m-edit-function' is used.

`w3m-encoding-type-alist'
     Alist of file suffixes and content encoding types.

`w3m-file-coding-system'
     Coding system used when writing configuration files.  This value
     will be referred to by the `w3m-save-list' function.

`w3m-file-name-coding-system'
     Coding system used to convert pathnames when emacs-w3m accesses
     files.

`w3m-fill-column'
     Integer used as the value for `fill-column' in emacs-w3m buffers.
     If it is positive, pages will be displayed within the columns of
     that number.  If it is zero or negative, the number of columns
     which subtracted that number from the window width is applied to
     the maximum width of pages.  Note that XEmacs does not always
     obey this setting.

`w3m-follow-redirection'
     Maximum number of redirections which emacs-w3m honors and
     follows.  If `nil', redirections are followed by the `w3m'
     command.  Don't set it to `nil' if you allow to use cookies
     (i.e., you have set `w3m-use-cookies' to non-`nil') since cookies
     may be shared among many redirected pages.

`w3m-home-page'
     This variable specifies the url string to open when emacs-w3m
     starts.  Don't say HP, it's the abbreviated name of a certain
     company. ;-)

`w3m-horizontal-scroll-columns'
     Number of steps in columns used when scrolling a window
     horizontally.

`w3m-horizontal-scroll-division'
     Integer used by the program making the point certainly visible.
     The cursor definitely does not go missing even when it has been
     driven out of the window while wandering around anchors and forms
     in an emacs-w3m buffer.

     Suppose that the value of this variable is N.  When the point is
     outside the left of the window, emacs-w3m scrolls the window so
     that the point may be displayed on the position within 1/N of the
     width of the window from the left.  Similarly, when the point is
     outside the right of the window, emacs-w3m scrolls the window so
     that the point may be displayed on the position of 1/N of the
     width of the window from the right.

     This feature doesn't work if `w3m-auto-show' is `nil'.  The value
     must be a larger integer than 1.

`w3m-horizontal-shift-columns'
     Number of steps in columns used when shifting a window
     horizontally.  The term `shifting' means a fine level scrolling.

`w3m-imitate-widget-button'
     If non-`nil', imitate the widget buttons on link (anchor)
     buttons.  It is useful for moving about in a Gnus article buffer
     using `TAB' key.  It can also be any Lisp form that should return
     a boolean value.

`w3m-init-file'
     Your emacs-w3m startup file name.  If a file with the `.el' or
     `.elc' suffixes exists, it will be read instead.

     Note: This file is used as the startup configuration *NOT* for
     the `w3m' command but for emacs-w3m.  In order to modify
     configurations for the `w3m' command, edit the file named
     `~/.w3m/config' normally.

`w3m-input-coding-system'
     Coding system used when writing to `w3m' processes.  It overrides
     `coding-system-for-write' if it is not `binary'.  Otherwise, the
     value of the `w3m-current-coding-system' variable is used
     instead.

`w3m-keep-arrived-urls'
     Maximum number of URLs which the arrived URLs database keeps.

`w3m-keep-cache-size'
     Maximum number of pages to be cached in emacs-w3m.

`w3m-key-binding'
     Type of key binding set used in emacs-w3m sessions.  The valid
     values include `info' which provides Info-like keys, and `nil'
     which provides Lynx-like keys.

`w3m-language'
     Your preferred language used in emacs-w3m sessions.

`w3m-local-directory-view-method'
     Symbol of the method to view a local directory tree.  The valid values
     include `w3m-cgi' using the CGI program specified by the
     `w3m-dirlist-cgi-program' variable (which see), and
     `w3m-dtree' using the w3m-dtree Lisp module.

`w3m-local-find-file-function'
     Function used to open local files.  If a url of the `file:'
     scheme in which you entered agrees with the rule of the
     `w3m-local-find-file-regexps' variable (which see), it is used to
     open the file.

     Function should take one argument, the string naming the local
     file.  It can also be any Lisp form returning a function.  Set
     this to `nil' if you want to always use emacs-w3m to see local
     files.

`w3m-local-find-file-regexps'
     `Cons' of two regexps matching and not matching with local file
     names.  If a url of the `file:' scheme in which you entered
     matches the first form and does not match the latter form, it
     will be opened by the function specified by the
     `w3m-local-find-file-function' variable.  `Nil' for the regexp
     matches any file names.

     For instance, the value `(nil . "\\.html?\\'")' allows
     `file:///some/where/w3m.el', not `file:///any/where/index.html',
     to open by the function specified by
     `w3m-local-find-file-function'.  The latter will be opened as a
     normal web page.

     It is effective only when the `w3m-local-find-file-function'
     variable is set properly.

`w3m-mailto-url-function'
     Function used to handle the `mailto' urls.  Function is called
     with one argument, just a url.  If it is `nil', a function
     specified by the `mail-user-agent' variable will be used for
     composing mail messages.

`w3m-mailto-url-popup-function-alist'
     Alist of `(MAJOR-MODE . FUNCTION)' pairs used to pop a mail
     buffer up.  If a user clicks on a `mailto' url and a mail buffer
     is composed by `mail-user-agent' with the `MAJOR-MODE',
     `FUNCTION' will be called with a mail buffer as an argument.
     Note that the variables `special-display-buffer-names',
     `special-display-regexps', `same-window-buffer-names' and
     `same-window-regexps' will be bound to `nil' while popping to a
     buffer up.

`w3m-make-new-session'
     Non-`nil' means making new emacs-w3m buffers when visiting new
     pages.  If it is non-`nil' and there are already emacs-w3m
     buffers, the `w3m' command makes a new emacs-w3m buffer if a user
     specifies a url string in the minibuffer, and the
     `w3m-safe-view-this-url' command also makes a new buffer if a
     user invokes it in a buffer not being running the `w3m-mode'.
     The default value is `nil'.

`w3m-mbconv-command'
     Name of the `mbconv' command provided by the `libmoe' package.
     The `libmoe' package is used when you use the `w3mmee' command
     instead of the `w3m' command.  See also `w3m-command'.

`w3m-no-proxy-domains'
     List of domain names for which emacs-w3m will not use a proxy
     server.  Each element should be exactly a domain name which means
     the latter common part of the host names, not a regexp.

`w3m-output-coding-system'
     Coding system used when reading from `w3m' processes.

`w3m-pop-up-frames'
     Non-`nil' means pop to a new frame up for an emacs-w3m session.
     This variable is similar to `pop-up-frames' and does override
     `w3m-pop-up-windows'.  If `w3m-use-tab' is non-`nil' or there is
     the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or
     more emacs-w3m session.

`w3m-pop-up-windows'
     Non-`nil' means split the windows when a new emacs-w3m session is
     created.  This variable is similar to `pop-up-windows' and quite
     overridden by `w3m-pop-up-frames' as if `pop-up-frames'
     influences.  Furthermore, if `w3m-use-tab' is non-`nil' or there
     is the buffers selection window (for the `w3m-select-buffer'
     feature), this variable is ignored when creating the second or
     more emacs-w3m session.

`w3m-popup-frame-parameters'
     Alist of frame parameters used when creating a new emacs-w3m
     frame.  It allows not only the alist form but also XEmacs' plist
     form.

`w3m-prefer-cache'
     Non-nil means that cached contents are used without checking
     headers.

`w3m-profile-directory'
     Directory where emacs-w3m config files are loaded from or saved
     to.

`w3m-quick-start'
     Non-`nil' means let emacs-w3m start quickly w/o requiring
     confirmation.  When you invoke the `w3m' command, it attempts to
     visit the page of a string like url around the cursor or the
     value of `w3m-home-page'.  You won't be asked for the
     confirmation then if this value is non-`nil'.  Otherwise, you
     will be prompted for that url with the editing form.

`w3m-redirect-with-get'
     If non-`nil', use the GET method after redirection.  It controls
     how emacs-w3m works when a server responds the code 301 or 302.
     Here is an extract from RFC2616:

     Note: RFC 1945 and RFC 2068 specify that the client is not
     allowed to change the method on the redirected request.  However,
     most existing user agent implementations treat 302 as if it were
     a 303 response, performing a GET on the Location field-value
     regardless of the original request method.

`w3m-relationship-estimate-rules'
     Rules to estimate relationships between a retrieved page and
     others.

`w3m-select-buffer-horizontal-window'
     Non-`nil' means split windows horizontally to open the selection
     window.

`w3m-select-buffer-window-ratio'
     The percentage of the selection window to the whole frame.  The
     car is used when splitting windows horizontally and the cdr is
     for splitting windows vertically.

`w3m-show-decoded-url'
     Non-nil means show decoded URIs in the echo area, the balloon,
     etc.  This variable can take one of the following five kinds of
     forms:

       1. t

          Decode URIs using the encoding assumed by the default
          presumption rule based on the priority list including the
          encoding used to decode the current page and the value of
          `w3m-coding-system-priority-list'.

       2. Coding system

          Decode URIs using this value.

       3. List of coding systems

          Decode URIs using the encoding assumed based on this list.

       4. Alist of predicates and forms described below:

          Each element looks like the `(PREDICATE . ENCODING)' form.
          `PREDICATE' should be a regexp, a function or a Lisp form,
          and `ENCODING' should be one of the forms described here
          excluding this form.  If `PREDICATE' is a regexp, it will be
          tested whether it matches to the current url.  If it is a
          function, it will be called with no argument.  If it is a
          Lisp form, it will be simply evaluated.  Elements are tested
          in turn until the result of the test of the predicate is
          true and the encoding which is associated to the predicate
          is used for decoding URIs.

       5. nil

          Don't decode URIs.

`w3m-show-error-information'
     Non-`nil' means show an error information as a web page.  Page is
     made when the foreign server doesn't respond to a request to
     retrieve data.

`w3m-space-before-favicon'
     String of space char(s) to be put in front of favicon in the
     mode-line.  It may be better to use two or more spaces if you are
     using oblique or italic font in the modeline.

`w3m-space-before-modeline-icon'
     String of space character(s) to be put in front of the modeline
     icon.  It may be better to use one or more spaces if you are
     using oblique or italic font in the modeline.

`w3m-terminal-coding-system'
     Default coding system used when writing to `w3m' processes.  It
     is just a default value to set process' coding system initially.
     (This variable name is analogically derived from the behavior of
     the `w3m' command which accepts data from Emacs just like reads
     from the terminal.)

`w3m-touch-command'
     Name of the executable file of the touch command.  Note that the
     command is required to be able to modify file's timestamp with
     the `-t' option.

`w3m-track-mouse'
     Whether to track the mouse and message the url under the mouse.
     This feature does not work under Emacs or XEmacs versions prior
     to 21.  See also `show-help-function' if you are using Emacs 21
     or later.

     A tip for XEmacs users:

     You can also use the `balloon-help' feature by the `M-x
     balloon-help-mode' command with arg 1.  If the window manager
     decorates the balloon-help frame, and that is not to your taste,
     you may strip it off with the following directives:

          For ol[v]wm use this in .Xdefaults:
             olvwm.NoDecor: balloon-help
               or
             olwm.MinimalDecor: balloon-help

          For fvwm version 1 use this in your .fvwmrc:
             NoTitle balloon-help
          or
             Style "balloon-help" NoTitle, NoHandles, BorderWidth 0

          For twm use this in your .twmrc:
             NoTitle { "balloon-help" }

     See the `balloon-help.el' file for more information.

`w3m-uri-replace-alist'
     Alist of regexps matching URIs, and some types of replacements.
     It can be used universally to replace URI strings in the local
     rule to the valid forms in the Internet.

     Each element looks like the `(REGEXP FUNCTION OPTIONS...)' form.
     `FUNCTION' takes one or more arguments, a uri and `OPTIONS'.  You
     can use the grouping constructs `\\(...\\)' in `REGEXP', and they
     can be referred by the `\N' forms in a replacement (which is one
     of `OPTIONS').

     Here are some predefined functions which can be used for those
     ways:

     `w3m-pattern-uri-replace'
          Replace a URI using PATTERN (which is just an `OPTION').  It
          is allowed that PATTERN contains the `\N' forms in the same
          manner of `replace-match'.

     `w3m-search-uri-replace'
          Generate valid URLs to query words on some specified search
          engines.  For example, the element

               ("\\`gg:" w3m-search-uri-replace "google")

          makes it possible to replace the URI `gg:emacs' to a query
          for the word `emacs' on the Google search engine.

`w3m-url-local-directory-alist'
     Alist of URLs and local directories.  If directory names of a
     given URL and the car of an element are the same, emacs-w3m
     assumes that the file exists in the local directory where the cdr
     of an element points to.  The default value will be set to a
     value of the `yahtml-path-url-alist' variable which exchanged the
     car and the cdr in each element if it is available.

`w3m-use-ange-ftp'
     Non-`nil' means that `ange-ftp' or `efs' is used to access FTP
     servers.

`w3m-use-cygdrive'
     If non-`nil', use the `/cygdrive/' rule when performing
     `expand-file-name'.

`w3m-use-filter'
     Non-`nil' means use filter programs to convert web contents.  See
     also `w3m-filter-rules'.

`w3m-use-form'
     Non-`nil' means make it possible to use form
     extensions. *(EXPERIMENTAL)*

`w3m-use-header-line'
     Non-`nil' means display the header line.

`w3m-use-mule-ucs'
     Non-`nil' means use the multi-script support with Mule-UCS.

`w3m-use-refresh'
     Non-`nil' means honor the REFRESH attribute in META tags.
     Emacs-w3m arbitrarily takes you to a url specified by that
     attribute.  Note that they may be malicious traps.

`w3m-use-symbol'
     Non-`nil' means replace symbols that the `<_SYMBOL>' tags lead
     into.  It is meaningful only when the `w3m-m17n' command is used
     and (X)Emacs handles unicode charsets.

`w3m-use-tab'
     Non-`nil' means make emacs-w3m a tab browser.  It makes it possible
     to show all emacs-w3m buffers in a single window with the tabs line, and
     you can choose one by clicking a mouse on it.  Unfortunately, users of
     Emacs 20 and less cannot enjoy this feature.  See also
     `w3m-use-tab-menubar'.

`w3m-use-tab-menubar'
     Non-`nil' means use the TAB pull-down menu in the menubar.  It
     makes it possible to show all emacs-w3m buffers in a single
     window, and you can choose one by clicking a mouse on it.  This
     feature requires that Emacs has been built to be able to display
     multilingual text in the menubar if you often visit web sites
     written in non-ascii text.  See also `w3m-use-tab'.

`w3m-use-toolbar'
     Non-`nil' activates toolbar of `w3m'.

`w3m-user-agent'
     String used for the User-Agent field.  See also
     `w3m-add-user-agent'.

`w3m-view-this-url-new-session-in-background'
     Run `w3m-view-this-url' without switching to the newly created
     buffer.  It is useful if you enabled the tabs line or the buffers
     selection window for the `w3m-select-buffer' feature.  Note that
     it is meaningful only when specifying a prefix argument to the
     `w3m-view-this-url' command or using the
     `w3m-view-this-url-new-session' command in order to create a new
     emacs-w3m session.



File: emacs-w3m-ja.info, Node: Image Variables, Next: Form Variables, Prev: General Variables, Up: Customizable Variables

画像に関連した変数
==================

`w3m-default-display-inline-images'
     Non-`nil' means display images inline in emacs-w3m buffers.  You
     can toggle the visibility of images with the
     `w3m-toggle-inline-images' command.  See also
     `w3m-toggle-inline-images-permanently'.

`w3m-favicon-cache-expire-wait'
     The cache will be expired after specified seconds passed since
     retrieval.  If this variable is `nil', never expired.

`w3m-favicon-cache-file'
     Filename of saving favicon cache.  It defaults to the file named
     `.favicon' under the directory specified by the
     `w3m-profile-directory' variable.

`w3m-favicon-size'
     Size of favicon. This value is used as geometry argument for
     `convert'.

`w3m-favicon-type'
     Image type of display favicon.

`w3m-favicon-use-cache-file'
     If non-`nil', use favicon cache file.

`w3m-icon-directory'
     Directory where emacs-w3m should find icon files.

`w3m-imagick-convert-program'
     Program name of ImageMagick's `convert'.

`w3m-treat-image-size'
     Non-`nil' means let the `w3m' command mind the ratio of the size
     of images and text.  The default value is `t'.

     If it is non-`nil', the `w3m' command will make a `halfdump'
     which reserves rectangle spaces in which images will be put, and
     also `alt' texts will be truncated or padded with spaces so that
     their display width will be the same as the width of images.

     See also `w3m-pixels-per-character' and `w3m-pixels-per-line'.
     Those values will be passed to the `w3m' command in order to
     compute columns and lines which images occupy.

`w3m-pixels-per-character'
     Integer used for the `-ppc' argument of the `w3m' command.  If
     `nil', the width of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  The default value is
     `nil'.  If you want to use emacs-w3m in a character terminal and
     make `w3m-treat-image-size' effective, you need to set this
     variable properly.

`w3m-pixels-per-line'
     Integer used for the `-ppl' argument of the `w3m' command.  If
     `nil', the height of the default face is used.  It is valid only
     when `w3m-treat-image-size' is non-`nil'.  Note that a small
     value may not induce a good result.  The default value is `64'.
     If you want to use emacs-w3m in a character terminal and make
     `w3m-treat-image-size' effective, you need to set this variable
     properly.

`w3m-resize-image-scale'
     Number of steps in percent used when resizing images.

`w3m-resize-images'
     If non-`nil', resize images to the specified width and height.

`w3m-show-graphic-icons-in-header-line'
     Non-`nil' means show graphic status indicators in the
     header-line.  If it is `nil', also the favicon won't be shown in
     the header-line even if `w3m-use-favicon' is non-`nil'.  This
     variable is currently meaningless under XEmacs.

`w3m-show-graphic-icons-in-mode-line'
     Non-`nil' means show graphic status indicators in the mode-line.
     If it is `nil', also the favicon won't be shown in the mode-line
     even if `w3m-use-favicon' is non-`nil'.

`w3m-toggle-inline-images-permanently'
     Non-`nil' means let the visibility of images continue
     permanently.  The visibility of images is initialized according
     to `w3m-default-display-inline-images' at the first time, and
     except that it may be toggled by the `w3m-toggle-inline-images'
     command, it does not change hereafter, if it is non-`nil'.
     Otherwise, whether images are visible is initialized according to
     `w3m-default-display-inline-images' whenever you visit a new page
     or reload the current page in an emacs-w3m buffer.

`w3m-use-favicon'
     Non-`nil' means show favicon images if they are available.  It
     will be set to `nil' automatically if ImageMagick's `convert'
     program does not support the ico format.



File: emacs-w3m-ja.info, Node: Form Variables, Next: Cookie Variables, Prev: Image Variables, Up: Customizable Variables

フォームに関連した変数
======================

`w3m-form-input-map-buffer-lines'
     Buffer lines for form select map buffer.

`w3m-form-input-select-buffer-lines'
     Buffer lines for form select buffer.

`w3m-form-input-textarea-buffer-lines'
     Buffer lines for form textarea buffer.

`w3m-form-mouse-face'
     Mouse face to highlight selected value.

`w3m-form-treat-textarea-size'
     Non-`nil' means to process textarea size (treat textarea rows).

`w3m-form-use-fancy-faces'
     Use fancy faces to fontify `<form>' tags.

`w3m-form-use-textarea-backup'
     Non-`nil' means save and restore backup text saved when you last
     edited this textarea.  Files to save text are stored in the
     directory specified by the `w3m-form-textarea-directory'
     variable.



File: emacs-w3m-ja.info, Node: Cookie Variables, Next: Bookmark Variables, Prev: Form Variables, Up: Customizable Variables

クッキーに関連した変数
======================

`w3m-cookie-accept-bad-cookies'
     If `nil', don't accept bad cookies.  If `t', accept bad cookies.
     If ask, ask user whether accept bad cookies or not.

`w3m-cookie-accept-domains'
     A list of trusted domain name string.

`w3m-cookie-file'
     File in which cookies are kept.

`w3m-cookie-reject-domains'
     A list of untrusted domain name string.

`w3m-use-cookies'
     Non-`nil' means enable emacs-w3m to use cookies.
     *(EXPERIMENTAL)*



File: emacs-w3m-ja.info, Node: Bookmark Variables, Next: Search Variables, Prev: Cookie Variables, Up: Customizable Variables

ブックマークに関連した変数
==========================




File: emacs-w3m-ja.info, Node: Search Variables, Next: Weather Variables, Prev: Bookmark Variables, Up: Customizable Variables

ウェブ検索に関連した変数
========================




File: emacs-w3m-ja.info, Node: Weather Variables, Next: Dtree Variables, Prev: Search Variables, Up: Customizable Variables

天気予報に関連した変数
======================




File: emacs-w3m-ja.info, Node: Dtree Variables, Next: Antenna Variables, Prev: Weather Variables, Up: Customizable Variables

dtree に関連した変数
====================




File: emacs-w3m-ja.info, Node: Antenna Variables, Next: Perldoc Variables, Prev: Dtree Variables, Up: Customizable Variables

アンテナに関連した変数
======================




File: emacs-w3m-ja.info, Node: Perldoc Variables, Next: Namazu Variables, Prev: Antenna Variables, Up: Customizable Variables

Perldoc に関連した変数
======================




File: emacs-w3m-ja.info, Node: Namazu Variables, Next: Octet Variables, Prev: Perldoc Variables, Up: Customizable Variables

Namazu に関連した変数
=====================




File: emacs-w3m-ja.info, Node: Octet Variables, Next: Hooks, Prev: Namazu Variables, Up: Customizable Variables

Octet に関連した変数
====================




File: emacs-w3m-ja.info, Node: Hooks, Next: Other Variables, Prev: Octet Variables, Up: Customizable Variables

フック
======

`w3m-after-cursor-move-hook'
     Hook run each time after the cursor moves in emacs-w3m buffers.
     This hook is called by the `w3m-check-current-position' function
     by way of `post-command-hook'.

`w3m-delete-buffer-hook'
     Hook run when every emacs-w3m buffer is deleted.

`w3m-display-hook'
     Hook run after displaying pages in emacs-w3m buffers.  Each function is
     called with a url string as the argument.  This hook is evaluated by the
     `w3m-goto-url' function.

`w3m-fontify-after-hook'
     Hook run after fontifying emacs-w3m buffers.  This hook is
     evaluated by the `w3m-fontify' function.

`w3m-fontify-before-hook'
     Hook run when starting to fontify emacs-w3m buffers.  This hook
     is evaluated by the `w3m-fontify' function.

`w3m-form-input-map-mode-hook'
     A hook called after w3m-form-input-map-mode.

`w3m-form-input-map-set-hook'
     A Hook called before w3m-form-input-map-set.

`w3m-form-input-select-mode-hook'
     A hook called after w3m-form-input-select-mode.

`w3m-form-input-select-set-hook'
     A Hook called before w3m-form-input-select-set.

`w3m-form-input-textarea-mode-hook'
     A hook called after w3m-form-input-textarea-mode.

`w3m-form-input-textarea-set-hook'
     A Hook called before w3m-form-input-textarea-set.

`w3m-minor-mode-hook'
     Hook run after `w3m-minor-mode' initialization.

`w3m-mode-hook'
     Hook run after `w3m-mode' initialization.  This hook is evaluated
     by the `w3m-mode' function.

`w3m-select-buffer-hook'
     Hook run when a different emacs-w3m buffer is selected.



File: emacs-w3m-ja.info, Node: Other Variables, Prev: Hooks, Up: Customizable Variables

その他の変数
============

`w3m-async-exec'
     Non-`nil' means execute the `w3m' command asynchronously in Emacs
     process.

`w3m-broken-proxy-cache'
     Set it to `t' if the proxy server seems not to work properly in
     caching.  Note that this may be the double-edged sword; setting
     it to `t' will likely be harmful if the proxy server sends bad
     requests (e.g., not including the Host header, see RFC2616
     section 14.23) to foreign servers when the `w3m' command
     specifies the `no-cache' directive.  Also note that it may not be
     effective if you are using old `w3m' command.

`w3m-history-minimize-in-new-session'
     Non-`nil' means minimize copied history so that there's only
     current page.  This variable is effective when creating of the new
     session by copying (i.e., `w3m-copy-buffer').  The default value is
     `nil'.

`w3m-history-reuse-history-elements'
     Non-`nil' means reuse the history element when re-visiting the
     page.  Otherwise, a new history element will be created even if
     there are elements for the same url in the history.

     Emacs-w3m used to operate as the case in which it is non-`nil',
     however it sometimes brought about users' dissatisfaction.  For
     example, if a user visited the pages A -> B -> C -> B in order,
     performing BACK on the second B would let a user visit A.  The
     reason why a user was taken to A rather than C is that the
     `w3m-history' variable only had the list `(A B C)' as a history
     and B was the current position at that time.

     The default value for this variable is `nil' which allows the
     `w3m-history' variable to have the list `(A B C B)'.  Where
     contents of two B's are the identical Lisp objects.  So, too much
     wasting the Lisp resources will be avoided.

     See the documentation for the variables `w3m-history' and
     `w3m-history-flat' for more information.

`w3m-process-connection-type'
     Value for `process-connection-type' used when communicating with
     `w3m'.

`w3m-process-modeline-format'
     Format used when displaying the progress of the external `w3m'
     process.  It shows a percentage of the data loaded from the web
     server.

`w3m-xmas-show-current-title-in-buffer-tab'
     If non-`nil', show the title strings in the buffers tab.  It has
     no effect if your XEmacs does not support the gutter items.



File: emacs-w3m-ja.info, Node: Hooking into MUAs, Next: Frequently Asked Questions, Prev: Customizable Variables, Up: Top

メール/ニュースリーダーで使う
*****************************

ここでは三種類の MUA (Message User Agent) を紹介します。それらの MUA は
すべて emacs-w3m を使うことによって HTML メールを適切に表示することがで
きます。それぞれの MUA と emacs-w3m を設定して使うための HowTo といくつ
かの注意を、ここで見つけることができるでしょう。

異なる習慣に関する即席の注釈: `message' って何? − Gnus ユーザが
`message' と言うとき、それはしばしばメールまたはニュースとして送信する
メッセージの草稿を意味します。しかし、それは Mew や Wanderlust のユーザ
が、受信したメッセージに対して使う用語です。彼らは送信するメッセージに
`draft' を使っています。一方 Gnus ユーザは、受信したメッセージを
`article' と呼びます。

* Menu:

* Gnus::                        Gnus で HTML メールを読む
* Mew::                         Mew で HTML メールを読む
* SEMI MUAs::                   SEMI MUA で HTML メールを読む
* VM::                          VM (vieW maiL) は Wanderlust にあらず



File: emacs-w3m-ja.info, Node: Gnus, Next: Mew, Prev: Hooking into MUAs, Up: Hooking into MUAs

Gnus で HTML メールを読む
=========================

Gnus (Emacs のニューズリーダー) が emacs-w3m をサポートしているって、知っ
ていましたか?

実際には Emacs に同梱されている Gnus は、(今はまだ) emacs-w3m をサポー
トしていません。最新版の Gnus を使うのが良いでしょう。それは以下の場所
で手に入ります:

`ftp://ftp.gnus.org/pub/gnus/gnus.tar.gz'

ご注意: あなたの Emacs に付属している Gnus のバージョンで emacs-w3m が
サポートされているとしたら、この説明書が古い、または非常に古いバージョ
ンの emacs-w3m を使っている、のどちらかを意味します。前者であれば
*Note Mailing List:: を参照して、このバグを知らせて下さい。後者の場合に
は、もっと新しいバージョンに更新するべきです。

   * Emacs-w3m で何ができるの?

     HTML の spam メールを、emacs-w3m を使って人間が読めるように変換す
     ることができます。もちろん HTML の ham メール (spam ではないメール)
     に対しても働き、どちらの場合でも emacs-w3m はデフォルトの変換器よ
     りもたぶん速いでしょう。追加の操作は必要ありません。それは単に表示
     されます。

     記事バッファの HTML の部分では `w3m-minor-mode' が on になって、
     emacs-w3m のと同じ主要なキーを使うことができます。例えば RET は、
     現在位置のリンクが指し示すページに行きます。それらのキーは変数
     `w3m-minor-mode-command-alist' で定義されています。保安上の理由か
     ら、いくつかのコマンドはそれに似た別のコマンドで置き換えられている
     ことを心に留めておいて下さい (下記参照)。

   * 何をしなければいけないの?

     Gnus のマニュアルを読んで下さい (*Note Display Customization:
     (emacs-mime)Display Customization.)。最も簡単な方法は、以下の行を
     `~/.gnus.el' ファイルに入れることです:

          (setq mm-text-html-renderer 'w3m)

     さらに、記事バッファで画像を表示したい場合は、以下の行を入れて下さ
     い。

          (setq mm-inline-text-html-with-images t)

     記事バッファで emacs-w3m のキーを使う必要が無いならば、以下の行も
     追加して下さい:

          (setq mm-inline-text-html-with-w3m-keymap nil)

   * ご注意

     前に spam と ham のことを書いたのはふざけているわけではなくて、あ
     なたの注意を喚起するためにまさにここにあるのです。HTML メールには
     `<img>' タグを使った spammers (spam をばらまくやから) の卑劣な悪巧
     みが含まれているかもしれません。それは `Click Here!' ボタンよりは
     るかに有害です。最もありそうなのは、そんなたちの悪い spam があなた
     の目に止まったかどうかを検査する、すなわちこの場合、あなたのメール
     アドレスが有効であることを確認するための spammer の意図があること
     です。それは、画像を表示するときに自動的に取得しに行くであろう
     URL に、識別文字列を埋め込むことによって行なわれます。変数
     `mm-w3m-safe-url-regexp' がデフォルト値から変更されていなければ、
     Gnus が勝手に spammer のサイトに接続することはありません。

     `mm-inline-text-html-with-images' を `t' にすれば、記事バッファに
     インライン画像を表示することができますよね?  いいえ、断じて違いま
     す。あなたはまだ守られているのです。あなたのメールアドレスが到達可
     能だという事実が漏れることを気にしないのであれば、変数
     `mm-w3m-safe-url-regexp' を `nil' にして下さい。
     `mm-w3m-safe-url-regexp' のデフォルト値は `"\\`cid:"' で、これは私
     たちが `cid:' URL によってメールに含まれている画像が安全だと考えて
     いることを意味します (すなわち、`mm-w3m-safe-url-regexp' を変更し
     なくても、そのような画像は表示することができます)。

   * おまけ

     概略バッファにいるときでも、記事バッファの画像表示をトグルに切り換
     えることができます。それらの画像が emacs-w3m によって表示される場
     合だけですけれどね。例です:

          (defun gnus-summary-w3m-safe-toggle-inline-images (&optional arg)
            "Toggle displaying of all images in the article buffer.
          If the prefix arg is given, all images are considered to be safe."
            (interactive "P")
            (with-current-buffer gnus-article-buffer
              (w3m-safe-toggle-inline-images arg)))

          (eval-after-load "gnus-sum"
            '(define-key gnus-summary-mode-map
               "\C-i" 'gnus-summary-w3m-safe-toggle-inline-images))

*Note Nnshimbun:: も参照して下さい。



File: emacs-w3m-ja.info, Node: Mew, Next: SEMI MUAs, Prev: Gnus, Up: Hooking into MUAs

Mew で HTML メールを読む
========================

Emacs-w3m を使うことによって、Text/Html を Message モードに表示できるよ
うになります。以下の設定を `~/.mew.el' ファイルに加えて下さい:

     (require 'mew-w3m)

これで、あたかも Text/Plain であるかのように、Text/Html を Message モー
ドに表示できるようになります。この際も、`C-c C-e' の操作は有効です。

このごろ、同じ情報を二つ含んでいるメールを非常によく見かけます。それら
は `text/plain' パートと `text/html' パートの両方から成る (何ちゅうバン
ド幅の無駄使いだ) `multipart/alternative' フォーマットを使っています。
Mew はデフォルトでは `text/plain' パートだけを表示します。あなたは
emacs-w3m を使っているのですから、`text/html' パートの方を優先したくな
るかもしれません。それならば、以下の設定を `~/.mew.el' ファイルに加えて
下さい:

     (setq mew-mime-multipart-alternative-list
           '("Text/Html" "Text/Plain" ".*"))

Mew に関連するいくつかのカスタマイズ可能な変数があります:

`mew-use-w3m-minor-mode'
     非-`nil' にすると、text/html パートが表示されているメッセージバッ
     ファにおいて `w3m-minor-mode' が on になり、emacs-w3m のと同じ主要
     なキーを使うことができます。例えば RET は、現在位置のリンクが指し
     示すページに行きます。それらのキーは変数
     `w3m-minor-mode-command-alist' で定義されています。保安上の理由か
     ら、いくつかのコマンドはそれに似た別のコマンドで置き換えられている
     ことを心に留めておいて下さい。デフォルト値は `nil' です。

`mew-w3m-auto-insert-image'
     非-`nil' にすると、multipart/related なメッセージを読んでいるとき
     に、メッセージバッファで画像をインライン表示させることができます。
     mew-w3m は、表示するために `cid:' URL によってメールの本文に含まれ
     ている画像だけ (私たちはそれらを安全だと考えています) を許可するこ
     とに注意して下さい。デフォルト値は `nil' です。

     ここで、`~/.mew.el' に

          (define-key mew-summary-mode-map "T" 'mew-w3m-view-inline-image)

     と書くと、"T" を押すことによって、画像表示の状態をトグルすることが
     できます。また、"C-uT" と prefix をつけると、メール本文に含まれて
     いない画像も表示します。

`mew-w3m-cid-retrieve-hook'
     `cid:' URL を取り出した後で実行されるフックです。デフォルト値は
     `nil' です。

*Note Mew Shimbun:: も参照して下さい。



File: emacs-w3m-ja.info, Node: SEMI MUAs, Next: VM, Prev: Mew, Up: Hooking into MUAs

SEMI MUA で HTML メールを読む
=============================

Emacs-w3m と SEMI MUA、例えば Wanderlust や T-gnus などを使うことによっ
て、HTML メールを人間が読めるように表示することができます。それらの
MUA は MIME の機能を SEMI (そしてさらに FLIM) に頼っているので、それら
を SEMI MUA と総称しています。SEMI は HTML メールの描画にデフォルトで
Emacs/W3 を使いますが、容易に emacs-w3m で置き換えることが可能で、それ
によってあなたの電脳生活はより快適になるでしょう。

単に以下の行を `~/.emacs' ファイルに入れれば良いのです:

     (require 'mime-w3m)

`mime-w3m' モジュールと `mime-w3' モジュールは、ご想像の通り機能的にほ
ぼ同じものです (名前も似ているでしょう?)。後者は SEMI パッケージに含ま
れています。

記事バッファの HTML の部分では `w3m-minor-mode' が on になって、
emacs-w3m のと同じ主要なキーを使うことができます。例えば RET は、現在位
置のリンクが指し示すページに行きます。それらのキーは変数
`w3m-minor-mode-command-alist' で定義されています。保安上の理由から、い
くつかのコマンドはそれに似た別のコマンドで置き換えられていることを心に
留めておいて下さい。

`mime-w3m' モジュールに関連するいくつかのカスタマイズ可能な変数がありま
す:

`mime-w3m-display-inline-images'
     非-`nil' だったら、画像が HTML メールにインライン表示されます。最
     初に `default' というシンボルだったら (それがデフォルトです)、この
     変数の値は、変数 `w3m-default-display-inline-images' の値で置き換
     えられます。たぶん、あなたはこれを変更する必要は無いでしょう。

`mime-w3m-safe-url-regexp'
     安全であると考えられる URL にマッチする正規表現です。デフォルト値
     は `"\\`cid:"' で、私たちは `cid:' URL によってメールに含まれた画
     像が安全だと考えていることを意味します。悪漢による攻撃については
     *Note Gnus:: を参照して下さい。

`mime-w3m-setup-hook'
     `mime-w3m' モジュールと SEMI の協調動作を設定した直後に実行される
     フックです。デフォルト値は `nil' です。

ところで、summary バッファにいるときでも、article バッファ (Wanderlust
のコミュニティでは message バッファと呼ばれている) の画像表示をトグルに
切り換えることができます。それらの画像が emacs-w3m によって表示される場
合だけですけれどね。T-gnus, Nana-gnus および Wanderlust 用の例です:

     ;; T-gnus or Nana-gnus:
     (defun gnus-summary-w3m-safe-toggle-inline-images (&optional arg)
       "Toggle displaying of all images in the article buffer.
     If the prefix arg is given, all images are considered to be safe."
       (interactive "P")
       (save-excursion
         (set-buffer gnus-article-buffer)
         (w3m-safe-toggle-inline-images arg)))

     (eval-after-load "gnus-sum"
       '(define-key gnus-summary-mode-map
          "\C-i" 'gnus-summary-w3m-safe-toggle-inline-images))

     ;; Wanderlust:
     (defun wl-summary-w3m-safe-toggle-inline-images (&optional arg)
       "Toggle displaying of all images in the message buffer.
     If the prefix arg is given, all images are considered to be safe."
       (interactive "P")
       (save-excursion
         (set-buffer wl-message-buffer)
         (w3m-safe-toggle-inline-images arg)))

     (eval-after-load "wl-summary"
       '(define-key wl-summary-mode-map
          "\M-i" 'wl-summary-w3m-safe-toggle-inline-images))

T-gnus か Nana-gnus をお使いならば *Note Nnshimbun:: も参照して下さい。



File: emacs-w3m-ja.info, Node: VM, Prev: SEMI MUAs, Up: Hooking into MUAs

VM (vieW maiL) は Wanderlust にあらず
=====================================

Emacs-w3m は VM を積極的にサポートしていません。それは単に emacs-w3m チー
ムに VM ユーザがいないからです。しかし悲観しないで。Emacs-w3m の配布の
attic ディレクトリに `vm-w3m.el' モジュールがあります。それが使えればめっ
けもんです。とにかく試して見て下さい。使い方はそのファイルにあります。

VM のどれかのバッファにいるときに、プレゼンテーション・バッファの画像表
示をトグルに切り換えたい場合は、以下を使って下さい:

     (define-key vm-mode-map "T" 'vm-w3m-safe-toggle-inline-images)



